/*
 * Copyright (c) 2025 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://edgeimpulse.com/legal/terms-of-service) or Enterprise Terms of
 * Service (https://edgeimpulse.com/legal/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */
// Generated on: 21.02.2025 19:36:24

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#define STRINGIZE(x) #x
#define STRINGIZE_VALUE_OF(x) STRINGIZE(x)

#if defined (__GNUC__)  /* GNU compiler */
#define ALIGN(X) __attribute__((aligned(X)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (_MSC_VER)
#define ALIGN(X) __declspec(align(X))
#elif defined (__TASKING__) /* TASKING Compiler */
#define ALIGN(X) __align(X)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ARMCC_VERSION) /* Arm Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ICCARM__) /* IAR Compiler */
#define ALIGN(x) __attribute__((aligned(x)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__clang__) /* LLVM/Clang Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#endif

#if defined(EI_MODEL_SECTION) && (defined(__GNUC__) || defined(__clang__))
#define MODEL_SECTION(X) __attribute__((section(STRINGIZE_VALUE_OF(X))))
#else
#define MODEL_SECTION(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 8
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 41632;
#else
constexpr int kTensorArenaSize = 40608;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
#if defined (EI_TENSOR_ARENA_LOCATION)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) DEFINE_SECTION(STRINGIZE_VALUE_OF(EI_TENSOR_ARENA_LOCATION));
#else
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#endif
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};

enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};

struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];

namespace g0 {
const TfArray<2, int> tensor_dimension0 = { 2, { 1,3960 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0024203432258218527, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data1[4] = { 1, 99, 40, 1, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data2[2] = { -1, 4000, };
const TfArray<1, int> tensor_dimension2 = { 1, { 2 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data3[5] = { -3287, -2658, 3436, -692, 2698, };
const TfArray<1, int> tensor_dimension3 = { 1, { 5 } };
const TfArray<1, float> quant3_scale = { 1, { 8.5973311797715724e-05, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data4[5*4000] = { 
  2, -14, -4, -9, -12, -13, -4, -22, -5, -34, -4, -14, -2, -10, -29, -3, 1, -13, -28, -29, -3, -32, -21, -13, -31, -29, -16, -23, -27, -29, -31, -30, 0, 1, -30, 21, -36, -24, -7, 6, -12, -20, 5, -10, -21, -1, -3, -34, -2, -2, -5, -6, -9, -10, 0, -7, -3, -58, 1, -1, -12, 29, 17, -31, -6, -8, 28, 5, -8, 10, 32, 14, 28, 19, 1, 23, 25, 9, -3, 21, 4, 12, 13, -19, 25, 14, 7, -10, 17, 25, 7, 14, -7, -8, 14, 8, 4, 3, 20, -17, 7, 6, 6, -10, -11, -9, -9, -16, -3, -35, -2, 9, -2, 1, 18, -7, -4, -3, -6, -18, -19, 10, -2, -14, 4, -13, 2, -10, -1, 0, -10, 8, -27, 0, -3, -2, -3, 12, -11, -4, 7, -1, 4, 3, 6, -5, -1, -15, -20, -7, -10, -3, -20, -9, -1, -17, -6, -7, 3, -22, -4, -1, -11, -13, -19, -7, 0, -5, -10, -32, 1, -31, 1, -16, -31, -9, -2, -8, -23, -27, -5, -32, -16, -23, -14, -38, -14, -21, -23, -26, -27, -23, 4, 10, -19, 13, -9, -36, 0, 1, -2, -19, -5, 16, -1, 21, 11, -29, -2, -6, 1, -10, 9, 7, 32, 3, 10, 15, 10, 16, -31, 21, 34, -11, -4, 10, 29, 14, 19, 20, 26, 40, 26, 31, 29, 33, 20, 13, -4, 36, 0, -26, 7, -11, 22, 7, -1, -22, 11, 29, 6, -9, -3, 5, 14, 28, 5, -1, -18, -37, -6, 12, -9, -18, -19, 20, -20, -17, -13, -15, 10, 9, 0, 3, -12, -2, -11, 5, -5, -22, -2, 10, -2, -20, 2, -3, -12, -18, 3, 7, -10, 11, -14, -6, 7, 1, -14, 18, 11, 18, 14, 6, -16, -23, -3, 15, -4, -12, 1, -3, -1, -14, 0, -14, 17, -17, -6, 9, -2, 0, 0, 3, 0, -29, 0, -7, -1, -8, -5, -11, -5, -20, 0, -4, -5, -1, -4, -20, -3, -26, -6, -9, -28, -24, -10, -36, -10, -19, -14, -26, -7, -28, -2, -4, -3, 2, -15, -15, -10, -13, -16, -9, -4, -2, 3, 8, 14, -48, -5, -10, 1, 4, -13, 4, 4, 10, -4, 1, -9, 1, 10, -5, 12, 2, -6, 7, 13, 25, 2, 13, 22, 44, 37, 36, -5, 36, 3, 23, -4, 27, 0, -17, -9, -21, 6, -10, 19, 3, 20, 7, 3, -7, 6, -2, -9, 23, -1, -20, -11, -11, -10, -20, -5, -18, -5, -10, -9, -14, -6, -7, 1, -2, -6, -4, -7, -1, -5, -4, -7, -11, -11, -15, -6, -6, -33, -14, 2, -24, -4, 6, 14, 4, -9, 5, 9, 7, -5, -5, -9, 14, 15, -4, 2, -16, -1, -19, 10, -15, 5, -5, 0, 6, 7, -19, 9, 1, 5, 9, -10, -8, -2, -12, -15, -34, -6, -7, -8, -27, -1, 0, -5, -23, -6, -22, -11, 5, 3, -3, -18, -30, 8, -10, -29, -25, -20, -8, -23, -26, -21, -24, -21, -14, -1, 3, -10, 17, -20, 3, -17, -12, -5, 14, 4, -8, 0, 2, 16, -36, -4, 5, 17, 7, -6, -2, -3, 10, 8, 6, 17, -3, -16, -6, 8, -4, -3, -12, 26, 0, -8, 10, 4, 35, 18, 40, -6, 14, 20, 5, -8, 49, 0, -13, -4, 5, 1, -2, -2, -4, 10, -12, -9, -9, -2, -8, -8, 30, -2, -22, 21, -11, 1, -16, 9, -18, -1, -29, 7, -13, 1, -9, -6, -20, 2, 4, 4, 3, -4, -6, -1, -18, -2, -13, 7, -11, 2, -4, -2, -10, 7, -8, 6, -2, -19, -3, -3, -17, -28, 24, 0, -5, -18, -4, 14, -11, 0, -15, 15, -13, -5, 7, -4, -11, -6, -9, -8, -19, 2, -6, 4, -9, 4, -4, -6, -17, 2, -10, -1, -16, -9, -20, -12, -11, 0, -18, -35, -1, -1, -11, -16, -24, -12, -18, -24, -35, -33, -44, -7, -19, -17, -4, -13, -33, -1, 5, -32, 13, -27, -17, 34, 18, 34, -14, 8, 28, -4, 33, 16, -42, 4, -3, 1, 22, 11, 20, -1, 4, 26, 17, 15, 46, -11, 12, 6, 2, -2, 18, 8, 12, 10, 23, 15, 52, 7, 52, 22, 34, 25, -5, -21, 32, 3, -14, 4, -10, 33, -1, -10, -3, 0, 3, -10, -11, -4, -13, -10, 18, 2, -6, -1, -3, -6, 7, -4, -11, -14, -13, 1, -12, 11, 2, -5, -8, 4, 2, 12, -5, -2, 1, 24, -10, -6, 5, 7, -13, 0, 4, 3, -9, -3, -11, 19, 4, 1, 0, -11, -5, -17, 35, 6, -17, 9, -7, 5, -5, -9, 1, 8, -17, -4, 1, -9, -18, -13, 8, -5, -12, -16, -4, 4, 6, -6, -18, -18, -27, -5, 0, 1, -12, -26, -23, -7, -17, -4, -32, -27, -7, 2, -18, -34, -21, -7, -17, -10, -35, -27, -49, -17, -19, -18, -17, -22, -43, -3, 21, 1, 34, -22, -24, 18, 37, 12, -10, -8, 28, 9, 37, 16, -30, -3, 6, 9, 18, 26, 5, 30, 4, 33, 12, 16, 48, -6, 15, 10, 1, -11, -8, 28, 5, 9, 18, 33, 48, 29, 35, 31, 33, 22, -3, -13, 42, 2, -13, 6, -14, 25, 10, 13, -19, -2, 1, 2, 0, 1, 0, -7, 17, -2, -8, 6, -7, -4, -6, -9, -12, -5, -10, -4, -6, -4, -4, -3, -5, 1, 9, 8, -7, 13, 16, 18, -15, -4, 2, -8, -12, 22, -1, -2, -14, -1, -10, -7, 23, -5, -1, 2, 20, -7, -3, -8, -3, -6, -4, 5, -18, 1, -16, -24, -11, -3, -21, -7, -11, -8, -19, -8, -10, 0, 6, 0, -12, -2, -4, -25, -28, -10, -7, -3, -21, -21, -5, -6, -29, -10, -31, -33, 5, -2, -16, -17, -20, 0, -27, -31, -26, -38, -41, -37, -36, -35, -16, 4, -22, -5, 17, -13, 37, -39, -19, -14, 41, 15, -10, -1, 23, 18, 43, 22, -27, -4, -25, 3, 26, 18, -3, 13, 43, 21, -4, 21, 27, 10, 16, -13, 44, -4, 2, 27, 32, 26, 23, 31, 54, 42, 28, 22, 40, 29, 25, -28, 28, -3, -15, 9, -14, 35, 2, -8, -21, 1, 18, 12, -7, -6, -4, -2, 24, 2, -20, 10, -3, 17, 12, 12, 0, 5, -5, 11, 4, 14, -1, 7, -6, -5, -8, 9, 0, 3, 5, 17, -3, -9, -3, 24, -9, 1, -5, 20, -19, -3, 5, 12, 10, -1, -14, 0, -13, -30, -19, 1, 10, 0, -1, -10, -23, 4, -4, -13, -11, -19, -19, -19, 1, -19, -15, -19, -12, -9, -12, -11, -25, -4, -4, -8, -35, 4, -10, -5, -23, -6, -2, -11, -17, -18, -29, -42, -3, -1, -13, -20, -22, 4, -21, -43, -48, -12, -45, -38, -38, -36, -6, 6, -36, -5, 34, -4, 34, -51, -10, 17, 33, 6, 13, 6, 23, 10, 27, 25, -24, 2, -12, 1, 10, 22, -9, 8, 40, 35, 0, 11, 33, 12, 19, 12, 13, -4, -19, 9, -1, 25, 4, 39, 43, 41, 42, 27, 31, 4, 7, -20, 57, 6, -14, -14, -14, 31, -3, -15, -20, 6, 8, -1, 5, -5, -11, -2, 13, 4, -15, 0, 6, 6, -5, 3, -17, -4, -15, 8, -7, -1, -4, 0, -11, -5, 10, 12, 6, -3, -2, 0, -10, -11, -4, -19, -13, -3, 7, 23, -14, 3, 17, 24, 11, -21, 3, 11, 9, -5, -3, -25, -13, -8, 7, 5, -17, 1, -11, -3, -8, -14, -14, 9, -20, -10, -18, 2, -1, -3, 0, 2, -22, -9, -15, 10, -30, -7, -17, 1, -16, -10, -22, -3, -6, 15, -23, -46, -1, 0, -32, -24, -31, 4, -26, -33, -60, -44, -28, -58, -71, -37, -26, -9, -42, 1, 43, -18, 41, -65, 0, 19, 49, 19, -1, 1, 19, 14, 24, 11, -37, -5, -25, 14, -6, 7, 8, -11, -1, 10, 15, 14, 10, 11, 5, 2, 31, 2, -10, 10, 35, 6, 5, 42, 45, 44, 10, 18, 65, 37, 17, -24, 33, -4, -15, 2, 7, 30, -20, -3, -10, 19, -7, 16, -9, 1, -1, -14, 13, 5, -17, 6, -6, 14, -12, -10, -14, 5, -5, 13, -5, -9, -1, -17, -3, -4, 0, 4, 4, -2, -23, 5, -9, 0, -12, 11, -3, -12, 3, -21, -9, 1, 8, -3, 2, -6, -8, -3, 11, -8, 10, 24, -22, -18, 10, 5, -18, 1, -8, 6, -11, -2, 6, 3, -18, -29, -5, 4, -31, 3, -15, 7, 4, -2, -11, -2, -51, 5, -12, -10, -28, -25, 8, -8, -32, -24, -64, -43, 8, 5, -38, -30, -44, -13, -40, -40, -68, -76, -32, -41, -80, -43, -52, -4, -51, -5, 60, 0, 25, -75, -15, 11, 22, -6, 14, -16, 5, 38, 18, 40, -36, 0, -10, 11, 0, 8, 1, 11, 8, 14, 31, 13, 19, 12, 16, 18, 23, -13, -14, 32, 30, 5, 22, 56, 72, 32, 31, 22, 48, 15, 15, -21, 42, 3, -26, 9, -27, 41, 33, -15, -14, -4, 21, -2, -11, -19, -4, -18, 19, 5, -23, 13, -25, -2, 12, 9, -38, -16, 14, -1, -18, 2, -13, 2, 19, -4, 2, 19, 2, 0, 18, 21, -8, -6, 6, 9, -9, -1, -1, 1, -4, 1, 15, 9, 5, -4, 6, -1, 11, -6, 4, 11, -5, 0, -7, 12, -12, 0, -9, 5, -10, -8, 9, -26, -22, -26, -7, -4, -22, -5, -19, -15, -5, 0, -12, -10, -56, -11, -4, -10, -40, -39, -9, -11, -52, -14, -62, -55, -2, 7, -67, -20, -56, 5, -21, -57, -97, -73, -50, -59, -105, -50, -68, -16, -41, 0, 55, -20, 29, -98, 7, 13, 17, -2, 7, 1, 10, 15, 27, 44, -72, 1, -4, -17, 0, 7, -4, -3, 29, 10, 7, 16, 34, 2, 3, 20, 6, -13, -22, 44, 53, 29, 22, 51, 104, 55, 35, 46, 77, 20, 37, -60, 49, -2, -48, -10, -18, 55, 23, 7, -27, 5, 9, 23, 2, -17, 3, -39, 36, 7, -11, -9, -13, 1, -2, 14, -21, -10, 4, 16, -3, 21, -6, -4, 0, 5, 10, 11, -16, -16, -1, 18, -26, -25, 0, 8, -21, 16, -6, 17, 3, 1, 19, 0, -9, -17, -6, 5, -14, -18, -4, -4, -10, -17, 2, 9, -12, 0, -9, -8, -27, -14, 4, -8, -18, -24, -18, -3, -12, -15, -22, -3, -15, -4, -32, -28, -60, -2, -13, 0, -30, -42, -19, -9, -67, -9, -65, -71, -26, 3, -64, -31, -60, 17, -28, -46, -91, -74, -43, -26, -75, -47, -45, -4, -59, 9, 49, -21, 32, -91, 0, 13, 22, -2, 16, 15, 24, 16, 33, 78, -76, 3, 2, -19, 8, 1, 33, 6, 23, 8, 3, 24, 29, -17, 25, 17, 2, -18, -22, 23, 30, 21, 5, 46, 103, 50, 16, 22, 72, 50, 18, -67, 63, 7, -40, -5, -26, 90, 16, 0, -23, 25, 35, 10, 16, -1, -17, -29, 32, 6, -17, -3, -23, 12, 25, 21, -40, 0, 4, 11, -9, 12, -13, 4, -1, 10, -1, 6, -8, -8, 15, 3, -37, -15, 4, 14, -19, 2, -11, 23, -23, -6, 30, 1, 0, -7, -1, 8, 4, -31, -13, 5, -29, 1, 0, 11, -12, -1, -9, 0, -12, 12, -1, 9, -26, -19, -19, 4, -18, -2, -17, -9, -5, 3, -35, -23, -76, 6, -20, -4, -15, -22, -49, -3, -43, -15, -68, -80, 4, 4, -86, -51, -49, 34, -54, -43, -88, -59, -74, -25, -68, -27, -31, -15, -50, 1, 45, -12, 36, -88, -12, 1, 25, -1, 4, 28, 31, -13, 43, 43, -79, 6, 0, -24, -6, 2, 24, -13, 10, 7, 12, 45, 24, -24, 22, 10, 4, -16, -5, 37, 11, 4, 8, 37, 76, 23, 35, 34, 56, 47, 0, -57, 70, 13, -31, 1, -38, 80, 4, 8, -21, 37, 16, 28, 27, -7, -29, -23, 15, 2, -27, -10, -22, 2, 15, 16, -46, -8, 7, 25, -15, 4, -3, -19, -3, 3, 4, -14, -10, -7, 20, 9, -18, -11, -16, 21, -8, -1, 7, 1, -4, -7, 16, 1, 25, -18, -13, 4, 46, -22, -13, 12, 18, 2, 16, 4, -10, 2, -1, 0, -12, 13, 1, -4, -27, -6, -11, 4, 1, -9, -7, -5, 7, -4, -30, -5, -70, -6, -10, 0, -7, -21, -40, -26, -38, -24, -57, -78, -18, 0, -93, -37, -40, 35, -69, -18, -65, -43, -84, -19, -41, -35, -10, -18, -69, -5, 33, -2, 46, -86, -12, 45, 37, 22, 9, 35, 57, 1, 63, 29, -83, 6, -16, -4, 7, 8, -10, -10, 22, 4, 16, 35, 46, -36, 15, 43, 10, -14, 18, 11, 2, -5, 29, 45, 67, 21, 66, 15, 48, 10, -5, -42, 64, 16, -27, -29, -44, 82, -23, 6, -34, 39, 0, -1, 8, -7, -22, -13, 6, 0, -24, -18, -20, 4, -13, 4, -23, 10, -21, -3, 13, 5, 10, -26, -5, 6, -10, -9, 18, -3, -15, 13, -10, -1, -22, -2, 5, -2, 11, -27, -13, -4, 26, -6, 30, -15, -1, 1, 30, -8, -13, -9, 26, -3, 20, 13, -13, -5, -1, 12, -19, 25, -2, -14, -6, 28, -22, -4, 11, 1, -26, -6, -11, -2, -23, -12, -52, 7, 0, -12, -6, -21, -38, -11, -31, -20, -41, -71, -5, 4, -68, -40, -34, 22, -48, -37, -43, -19, -96, -7, -47, -31, -3, -31, -61, -1, 38, -2, 51, -73, -17, 34, 35, 15, 1, 26, 59, -5, 56, 24, -83, 4, -9, 9, 5, 8, 15, 3, 30, 22, 8, 35, 48, -28, 10, 19, 19, -6, 11, 24, 4, 0, 21, 2, 93, 30, 53, 31, 41, 8, 5, -30, 45, 19, -32, -19, -25, 72, -15, -2, -6, 61, -16, 18, -3, -13, -4, -29, -1, 3, -26, -13, -15, 11, -12, -14, -17, -3, -11, 38, -4, -5, 5, -14, -14, 6, -2, -19, 35, -6, -21, 14, 8, 0, -16, 8, 2, -7, 30, -13, -10, -7, 11, -3, 19, -12, 2, -5, 21, -6, -5, 4, 14, -8, 18, -8, 1, -1, -1, -3, -2, 3, 2, 1, -12, 4, -28, -1, 6, -7, 7, -19, -4, 8, -18, -14, -51, -12, -19, -4, -16, -17, -8, -9, -28, -14, -21, -70, 0, 3, -58, -35, -11, -12, -42, -21, -41, -17, -83, -25, -31, -21, -3, -20, -69, -7, 48, 7, 41, -45, 7, 9, 23, 9, 13, 17, 28, 5, 45, 14, -50, 4, -8, -6, 23, 17, 7, 3, 30, 33, 18, 37, 49, -16, 10, 18, 23, -4, 21, 21, -8, 4, 16, 32, 66, 22, 44, 29, 43, 6, 0, -27, 54, 7, -15, -7, -14, 41, 0, 1, -21, 30, -5, -2, -4, 4, 4, -17, 19, 2, -27, -9, -4, 13, -5, 15, 6, 30, -25, 15, 3, 3, 4, -12, 7, 2, 3, -10, 13, -12, -1, 19, -8, -6, 1, 18, -2, 0, 23, -3, -12, -7, -4, 7, 16, 3, -10, 7, 14, 0, 0, 8, 42, -4, 3, -13, -3, 3, -17, 2, -12, 27, 0, -5, -10, 5, -1, 4, -1, -9, -11, -4, -16, 3, -14, -13, -26, -9, -15, -5, -9, -5, -26, -9, -12, -10, -22, -44, 5, 2, -31, -33, 3, 19, -27, -28, -39, -12, -59, -9, -22, -32, 3, -17, -52, -3, 31, -7, 67, -54, -1, -5, 39, 15, 16, 3, 55, -14, 48, 26, -28, -3, -5, 1, 18, 21, 5, 11, 39, 38, 11, 20, 47, -11, 13, 25, 31, -4, 6, 14, -3, 15, 28, 22, 58, 46, 54, 30, 42, 3, 13, -27, 58, -5, -19, -2, 21, 38, -11, 0, -4, 12, 4, 18, 3, -14, 13, 2, 20, -2, -9, 3, 9, 13, -15, 6, -12, 6, -3, 13, -9, 6, 6, -8, 14, 1, -1, 3, 12, -6, -11, 7, 7, -4, -2, 21, 7, -10, 26, 5, -4, 2, 18, 1, 1, 14, 0, 8, 5, -7, 17, 8, 11, 10, -4, 16, 15, -8, 15, 0, -4, 1, 2, 1, -3, 18, 0, 18, -4, 4, -9, -21, -6, 1, -9, -10, -37, -2, -1, -3, -19, -1, -26, -14, -14, -4, -27, -39, -1, 5, -25, -25, -9, 2, -15, -34, -19, -25, -41, -21, -19, -21, -10, 8, -51, -6, 36, -4, 26, -43, 9, -5, 26, 12, 25, -10, 3, -5, 20, 26, -15, 2, -18, 10, 5, 13, -11, 6, 20, 7, 16, -3, 25, -3, 5, 22, 43, -10, 9, 43, 3, 12, 12, 18, 55, 36, 29, 6, 56, 10, -7, -15, 56, 5, -11, 9, 5, 46, -25, 11, -5, 21, -18, 15, 11, -5, 0, -7, 2, 6, -8, 5, -2, 1, -14, -11, -8, -4, -10, 11, 3, 1, -14, -10, 11, 0, -12, 9, 6, -2, -14, -4, 8, 2, -8, -4, 3, -5, 8, 9, 4, -4, 7, -7, 1, -3, -5, -2, 10, 5, 13, 15, -2, -17, 9, 0, -2, 0, -11, -10, 10, 2, 3, 12, 5, -5, -14, 11, -8, -3, -9, -4, 1, 0, 0, -21, -36, -6, -11, -17, -2, -3, -20, 1, 7, -15, -21, -39, -10, 2, -29, -18, 6, -8, -38, -8, -14, -25, -45, -14, -23, -18, 5, 5, -48, 4, 48, -14, 41, -26, 5, -1, 19, 3, 27, 15, -2, -6, 12, 25, -19, 2, 9, 16, -2, -5, 9, 9, 11, -2, 24, 10, 9, 4, 2, 15, 41, 5, -7, 10, -1, 13, 28, 14, 41, 47, 36, 22, 56, 27, 0, -23, 43, 3, -13, 13, 2, 32, -1, 14, 20, 29, 5, 29, 26, 18, 8, -7, -4, 0, -3, -7, -16, 12, -5, -7, 9, -8, -8, 4, 20, 1, -16, -21, 2, -1, 9, 6, 1, -24, 7, 4, -7, -6, 1, -3, -10, -2, 13, -9, -12, -2, 8, -12, -6, -2, 4, -9, 8, 9, 5, 1, 3, -1, 0, -7, -3, 4, -6, -10, 6, -5, 3, -9, -16, -14, -12, -10, -13, -2, -24, -10, -13, 2, -7, -6, -22, 7, -11, -11, -12, -8, -12, -9, -21, -4, -19, -42, -6, 6, -19, -22, -3, -3, -32, -8, -28, -44, -36, -33, -39, -7, -17, 4, -29, 1, 6, -14, 26, -39, 6, -8, 2, -14, 36, -18, 8, -11, 19, 43, -20, -2, 19, 1, 16, -5, 35, 21, 24, 21, 31, 10, 14, 9, -13, 20, 38, -5, 4, 3, -6, 6, 1, 23, 20, 35, 45, 8, 27, 16, 6, -21, 46, 2, -6, -7, 16, 23, -19, 11, -3, 33, -15, -4, 0, -10, -8, -8, -3, 2, -18, -20, -28, -2, -20, 7, -10, -11, -5, -20, -11, -8, -24, -3, 5, -3, -1, -33, -2, -33, -13, -4, -14, -13, -8, -3, -19, -22, -3, -4, -14, 1, 0, -2, -5, -12, 9, -7, -17, 4, -6, -2, -4, 10, 4, -5, 7, 1, -7, -10, 9, -7, -8, 0, 2, -9, -12, 0, -16, -4, -19, -9, -16, 0, -16, -8, -11, -2, -3, -6, 3, 8, 0, -9, -17, -7, -9, -17, -6, 1, -21, -22, -18, -3, -24, -9, -27, -13, -19, -12, -30, -6, -21, -16, -33, -2, 8, -14, 26, -20, 2, 4, 8, 14, 1, 15, 12, 10, 19, 18, -5, -2, 11, 4, 29, -1, 24, 15, 23, -5, 34, 25, 22, 1, 7, 27, 26, -3, -3, 16, 18, 2, 12, 40, 46, 24, 13, 22, 22, 24, 21, -14, 30, -2, 2, 14, -16, 35, -24, -19, -4, 11, -3, -3, 0, -4, -16, -12, 2, -6, -20, -19, -26, 4, -20, -6, -23, -5, -16, -3, 0, -3, -18, -26, 5, -2, -7, -6, -19, -5, -26, -19, -9, -12, -13, -5, -4, -9, 27, 7, -15, -1, 5, -9, -15, -12, 12, -11, -5, -13, 30, 1, 0, 17, -12, -2, 6, 0, -3, 2, 2, -8, 9, 1, -18, -25, 14, -13, -11, 4, -12, 6, -4, -2, -18, -19, -23, 13, -22, -1, 2, 5, -12, -4, -13, 0, -26, -32, -6, 4, -14, -26, -20, 1, -11, -21, -19, -32, -38, -2, -36, -13, 6, 3, -33, -2, -3, -16, 26, -15, -6, 4, -6, 0, 7, -2, 15, -5, 17, 21, -29, 5, 4, 17, 9, -6, 19, 22, 9, 16, 23, -5, 18, -10, -16, 17, 1, -5, -2, 26, 1, -10, 33, 12, 16, 31, 27, 1, 23, 10, -19, -3, 9, 4, -16, -8, -10, 16, -5, -5, -11, 7, 40, -6, 1, 2, 0, -11, 2, 2, -26, -15, -19, 6, -9, -6, 2, 9, -11, 3, 4, 9, -12, -8, 15, -2, 1, -14, -10, -6, -10, -25, -11, -13, 11, -4, -5, -8, 3, -5, -22, -9, 1, -4, -6, 0, -2, -13, 4, -6, -14, 7, 14, 0, -9, 7, -10, 2, 3, -11, 4, -9, -9, 6, -8, -1, -20, 10, 2, -6, 2, -2, -13, -3, -3, -11, -13, -1, -5, 0, 1, -15, -22, 1, -18, -8, -16, -17, -8, 4, -18, -17, -29, -15, -17, -22, -22, -34, -33, -13, -50, -10, -24, -19, -29, 1, -16, -15, 37, -23, -24, -18, 25, -6, 0, 7, -7, -30, 26, 3, -34, -7, 1, -20, -9, -8, -11, -4, 10, -1, -6, -5, 22, -10, -8, 15, -5, -7, -12, 4, 19, 11, 5, 11, 28, 16, 51, 15, 36, -6, 19, -14, 26, 3, -16, 27, 9, 23, -6, 2, 0, 18, 2, -1, 3, -3, 7, -10, 10, -2, -12, -1, -16, 0, -15, 2, 9, 0, -9, -3, 19, 19, -10, -19, 6, 4, -2, -10, 17, 0, -15, 3, -2, 0, -11, -23, 5, -14, 12, 2, -6, 0, -12, -3, 9, 3, -10, 0, 8, 0, -17, 6, 9, 2, -15, -2, 0, 3, -4, 12, -10, -1, -8, 7, -4, -7, -2, 4, 4, 6, -1, -7, -2, -3, -11, -7, -12, 8, -5, -15, -31, 9, -19, -3, -24, -6, -13, -26, -7, 1, -17, -29, -22, -14, -14, -17, -31, -34, -33, -8, -29, -10, -16, -17, -30, -1, 1, -15, 10, -18, -11, -17, 19, 1, -4, 7, 15, -14, 14, -5, -28, -5, -3, -18, 12, -5, -4, -1, 4, 19, -5, 10, 33, -15, 5, -6, -7, 2, 5, -3, 13, -2, 29, 19, 9, 25, 37, 13, 44, 17, 13, -13, 40, 1, -4, 0, -11, 20, 4, 5, -10, 27, 10, -11, 15, 17, 11, -8, 13, 6, -14, -6, -19, 1, -19, -1, -7, 19, -2, -2, 16, 1, -1, -19, -1, 3, 0, 22, 32, -14, -19, 25, -18, 6, -7, 19, 21, 14, 14, 8, -13, -5, -18, 20, -16, 12, 7, -1, 18, 3, 15, 16, 34, -3, -5, 1, 7, -6, -11, 8, -4, 15, 9, 6, -4, -15, 15, 10, -2, 8, -1, 4, 6, 4, -5, -7, -16, 3, -12, 0, -8, -5, -8, 1, -21, -7, -8, -15, -16, -6, -16, -19, -3, -6, -22, -19, 6, 1, -31, -1, -13, -14, -10, -11, -40, -5, -4, 2, 30, -1, 4, -12, 0, -37, 18, 1, -26, -7, -4, 6, -14, -4, -4, -8, 22, -6, -11, 27, -1, 9, -5, -1, -4, -8, -13, 4, -10, 1, 9, 23, -14, -8, -2, 13, -13, 21, 21, -1, 10, 2, -7, -7, 39, 2, -3, -1, -2, -2, -6, 3, 3, 6, -8, -1, 21, 4, 10, -13, -4, -3, -12, -2, -1, -8, 0, -4, -2, 10, -8, -1, 17, 3, -1, -12, 2, 2, 1, 19, 14, -7, -12, 15, -5, -3, 20, 0, 7, -1, 15, 27, -5, -3, -12, -1, -12, -10, -3, 7, -7, 8, 32, 0, 21, 6, 11, 1, 25, 1, -13, 1, -4, -2, 3, 6, -7, 7, 15, -1, 6, 14, -1, -12, -11, 
  2, 1, -5, -8, -9, -10, -4, -9, -18, -28, -4, -22, -2, -7, -12, -3, 2, -5, -35, -12, -8, -40, -22, -17, -5, -33, -14, -21, -27, -13, -17, -39, 8, -1, -32, -22, 0, -19, -32, -7, -15, -28, -30, -13, -43, -16, -3, -18, 6, -13, -38, -3, -7, -3, -22, -12, -24, -48, -17, -18, -36, -9, 10, -43, -2, -1, -10, -5, -3, -8, -28, -29, -18, -21, 10, 7, 6, 6, 9, -18, -5, -2, -10, 2, -16, -11, 7, 10, 2, -20, 4, 6, 7, 7, 7, -8, -5, -27, -19, 4, 3, -12, 12, 0, 5, -21, 16, 7, -20, 8, -4, 0, 3, 2, -5, 16, 0, -10, 4, 17, -1, -24, 11, 6, -10, 7, 1, -16, -4, 6, -8, 9, 9, 0, 0, 1, -8, -9, 0, -9, -7, 4, 1, -8, -7, -8, 1, -20, -12, -6, -6, 1, -10, -19, -2, -16, -4, 8, -22, -21, 3, -15, -8, 0, 2, -5, 0, 6, 8, -26, 0, -41, 0, -11, -13, 1, -2, -3, -7, -9, -17, -34, -12, -13, -6, -29, -16, 1, -24, -20, -13, -8, -3, -8, -14, -22, -3, -28, -34, -7, -5, -32, -30, -17, -25, 0, -23, -12, -6, 0, -23, 4, -11, -19, -17, -10, -10, -34, -33, -44, -30, -9, 3, -27, 3, 20, -20, 12, -2, -17, -4, -19, -26, -27, -16, 3, -9, -1, 2, -6, -2, -5, 6, 12, -7, -8, 18, 16, 4, -37, 14, 15, 9, 19, 1, -2, -2, -12, 0, 10, 11, -19, 9, -1, 20, -14, 17, 18, 7, 11, 8, -1, -6, -10, 6, 6, 2, -4, 1, 7, 12, -45, 8, 9, -3, -3, -1, 2, -3, 0, 7, -5, -4, -3, -6, -7, 1, -7, 2, 14, -11, -11, 3, -2, -5, 0, -3, 5, -14, 4, 1, 6, -18, -13, -5, -29, 4, -1, -1, -14, 2, 2, 0, -12, -1, -8, 0, -13, 1, -25, -5, -8, 0, -10, -16, -2, 1, 4, -8, -5, -13, 12, -27, -2, -13, -35, -12, -16, -13, 17, -1, -23, -4, 3, -26, -5, 10, -17, -5, -3, 9, -5, -21, -7, 6, 2, -8, 15, 2, 6, -27, -20, 9, -10, -25, -16, -23, -32, -14, -23, -29, -24, 0, 6, 1, -5, -15, 5, 0, 19, -21, -17, -9, -4, 7, -6, 1, 4, 1, -24, 0, 5, 13, 10, 11, -3, 4, 4, -5, -8, 6, 10, -16, 11, -4, -22, -2, -2, -11, 13, 14, 3, 8, 15, -3, -2, 17, 12, 9, 17, -6, -3, -1, 8, -3, 2, 7, -4, 5, 7, -3, -8, 4, 5, 5, -1, -27, 8, -3, -5, 4, -8, 5, -3, -8, -13, 4, -14, 0, -6, -15, -5, -13, 6, -6, -9, -6, 7, -2, -3, 0, 1, -8, -10, -10, -16, -5, -6, -9, -8, 1, -7, -28, -9, -8, -6, 0, -6, -2, -3, -7, -36, -6, -20, -4, -8, -7, -3, -21, 5, -4, -8, -24, -1, 2, -16, -12, -4, -9, 4, 5, -10, 0, -12, -26, -37, 9, -12, -31, -4, -14, -26, -11, -5, 1, -17, -27, 8, -5, -13, -42, -7, 7, -9, -27, -10, -30, -19, -30, -39, -16, -4, 13, -15, 0, 8, -25, 11, -1, 1, 4, -8, -24, -12, -1, -1, -13, 5, 17, -41, -3, 8, 6, -13, -3, 7, 4, 10, 1, -1, 8, 8, 1, 6, 2, -6, 2, -3, -21, 3, 8, 5, 4, -1, 4, 1, -5, 12, -15, -4, -9, 9, 0, 1, -23, -14, 0, -17, -9, 8, 0, 4, -9, -1, -5, 3, -19, 7, -1, -9, -22, -10, -1, 0, 5, -6, 10, -19, -1, -4, 4, -1, -12, -2, -5, 0, -16, 4, -6, -4, 4, 10, 4, -18, 2, 12, 2, 6, -6, -9, 1, -9, -7, -22, -7, -12, -1, 0, -17, -26, -13, 6, 0, -11, -10, 11, -2, 9, -20, 12, 2, -15, -6, 2, -7, -54, -7, -17, -17, -3, 0, -27, 1, -1, -40, -1, 18, -20, -24, -14, -8, -12, 6, 9, -1, -5, -19, 11, -4, 2, -42, -13, 0, -34, -27, -18, -22, -11, -4, -28, -30, -11, -10, -55, -3, -16, -15, 10, -19, -6, -23, -5, -24, -22, -13, -13, -12, 13, 13, -27, -9, 8, 3, 12, -8, 16, 10, 9, 3, 4, 16, 9, 6, 16, 14, -4, 2, -6, 11, -3, 5, 10, 11, 8, 16, 4, 7, 10, -5, 3, -14, 14, 1, 4, 5, 2, 16, 4, -13, 2, -1, -3, 2, 4, 3, 2, -11, 10, -3, -21, -6, -14, 3, -7, -1, -16, 12, -17, -34, 5, -12, 7, 2, -1, 6, -11, 2, -6, -3, 1, 2, -9, 6, -3, -19, 4, 17, -15, -16, -11, -4, -13, -15, -15, -8, 0, -1, -10, -5, 1, -14, -35, -5, -17, -1, 4, -2, 13, -23, -7, -14, -28, -9, -32, -33, -4, -11, -36, -14, -9, 8, -17, 7, -4, -19, -7, -15, -18, -15, -6, 5, 5, -25, -7, 7, -18, -29, 18, -8, 4, -14, -16, -4, -22, -30, -10, -14, -21, -29, -52, -38, -15, -26, -31, -1, 11, -13, 19, -19, -9, -31, -14, -32, -6, -25, -7, -35, 11, 15, -38, -12, 10, 3, 12, -11, 10, 2, 12, 1, 18, -14, 3, 2, -2, 20, -5, 3, 8, 10, -19, 5, 13, 10, 21, 6, 25, -1, 10, 17, 8, 14, 14, -4, -11, 5, 3, 10, -3, -8, -9, 4, 8, -21, 13, -8, -19, -3, 10, -9, -2, 0, 0, 9, -9, -25, -12, -12, 6, -24, -11, -4, 7, -4, 12, -2, -1, -8, 10, 6, 2, -10, -12, -6, 6, -16, -7, -19, -1, -2, 10, 0, -12, -5, -15, -3, -10, -3, -12, -9, -18, -5, -32, -16, -1, 6, -13, 1, -15, -5, -13, -11, -29, -29, -18, -30, -40, -26, -22, -28, -1, 1, -26, -5, -14, -25, -21, -13, -29, -34, -1, -21, -34, -21, -41, -18, -32, -25, 14, 2, -3, -37, -12, -3, -41, -14, -8, -27, -61, -31, -26, -22, -11, -2, -46, 8, 1, -34, 1, -23, -21, -31, -9, -25, -44, -13, -29, -20, 2, 16, -50, -7, 11, -17, 2, -12, 5, 0, 29, 10, 10, -5, 21, -2, -1, 11, 23, -3, 2, -3, -4, -21, 2, -11, 3, 9, 3, 0, 12, -11, -13, -6, 11, 1, -5, -9, 3, -1, -4, -25, 6, 11, -1, 0, 8, 1, -5, -23, 18, -8, -8, -35, -5, 4, -19, -17, -9, 3, -3, -3, -22, -1, -1, 3, 8, 2, 2, -11, 18, 0, -22, -21, 2, -22, -1, -23, -13, -16, 6, 2, -12, 0, -9, -15, -10, 13, -10, -7, -15, -11, -27, -12, -7, -20, -6, -4, -7, -4, -10, -25, -16, -9, -2, -18, -25, -19, -17, -25, -9, -9, 8, -1, -40, 2, -6, 0, -8, -4, 2, -18, 8, 0, 0, -21, -9, -10, -31, -23, 10, -3, -8, 2, -18, -10, -46, -11, -31, -11, -11, -36, -35, -20, -13, 0, -35, 0, 16, 2, 22, -17, 3, -12, -16, -14, -19, -3, -6, 4, 24, 10, -50, 6, 7, 18, 13, -6, 4, 6, 15, 18, 5, 9, 16, 12, 4, 0, 14, -5, -1, 4, 4, 6, 6, -1, 3, 10, 17, -3, 3, 0, 4, -14, 13, -6, -10, -11, -8, 7, 1, -2, 5, 12, 10, 0, -1, -1, -11, -9, 23, -1, -9, -36, 1, 12, -4, -7, 2, -4, 2, 0, -19, -11, -5, -9, -6, -2, -18, -5, -14, -7, -9, -5, 17, -12, 2, -9, -25, -4, 14, 5, -19, 0, -5, -24, -43, 1, -14, -9, -2, -3, -7, -9, -25, -10, -28, -8, -10, 1, -5, -10, -18, -40, -17, -27, -21, -41, -1, -15, -7, -2, -14, 9, -43, 6, -9, -32, -28, 1, 6, -11, -25, -7, 10, -21, -14, 0, -15, 6, 5, -1, -3, -56, -32, -21, -10, -23, -33, -46, -31, -32, -38, -6, -17, 12, -46, 3, 16, 6, 11, -28, 0, -15, 11, -16, 14, 1, 0, 7, 21, 20, -35, -6, -4, 6, 9, 19, 20, 8, 10, -2, 9, 14, 17, 4, 9, 9, 5, -10, -6, -2, 5, 9, 14, 10, 10, 16, 8, 8, 13, 1, 8, 25, 3, 0, -23, -19, 4, -4, 23, -1, 2, 15, 9, 0, -9, 9, -15, 11, 17, -2, -2, -27, -31, 9, -4, -17, -46, -10, -11, -15, -43, 5, -21, 9, 10, -2, -4, -2, 0, -15, -3, -4, -10, -14, 0, -28, -27, -1, -4, -12, -1, -7, -3, -2, -48, 4, -20, -3, -41, -25, -8, -8, -38, -27, -42, -24, 7, -8, 13, -21, -5, -40, -29, 1, -10, -20, -30, -15, -10, -22, -5, -20, -47, -2, -20, -30, -27, 9, -22, -12, -8, 12, -40, -24, -9, -23, -15, -51, 16, 3, 3, -36, -46, -3, -17, -30, -63, -52, -42, -58, -64, -37, -33, 0, -55, 2, 15, -23, 19, -46, -15, -20, 16, -14, -12, 16, 11, 16, 27, 22, -57, 0, -16, 19, 8, 22, -23, 16, 3, 14, -8, 6, 17, 6, 16, -11, 25, -8, -29, -2, 3, 8, -3, 0, -2, 10, 0, 6, 14, 5, -2, -20, -12, 1, -4, -17, 3, -5, -19, 5, -3, 6, -16, -2, -1, -5, 13, -17, 16, 4, -2, -14, -19, 6, -6, -10, -31, -13, 0, -3, -17, -17, -24, -2, -1, -4, 2, -25, -23, -4, -8, -16, -13, -33, 0, -15, -16, -5, 1, 11, -7, -2, -26, -11, -54, 6, -11, -7, -45, -63, -26, -16, -64, -27, -65, -30, 1, 5, 17, -6, 16, -78, -5, -13, 21, 21, -14, -24, 29, -9, 22, 9, -64, -2, -39, -5, -6, 23, -21, -18, 0, 13, -5, -23, -9, -20, -14, -47, 29, 4, 35, -49, -63, -17, -25, -47, -79, -47, -26, -91, -82, -31, -31, 25, -52, -2, 32, -12, 16, -74, -13, -20, -2, -45, -40, -6, 20, 19, 50, 31, -70, -14, -7, 25, 9, 30, -5, 11, 4, 19, -4, 23, 26, 1, 10, -34, 30, -24, -29, 32, 2, 18, -39, 11, -2, 17, -2, 12, 7, 3, 11, -51, 1, -5, -28, 20, 9, 15, -28, 5, -6, 7, -11, 7, 2, 11, -4, -31, 11, 1, 13, -1, -41, 10, -1, -23, -44, -10, 16, 8, -19, -6, -28, 11, 5, 5, 2, 0, -9, -31, 29, 16, -9, -40, -15, 5, -13, -1, 0, 16, -23, 6, -27, -11, -75, 15, -20, -1, -61, -58, -40, 2, -47, -6, -61, -22, -14, 12, 37, -12, 13, -85, 0, 8, 27, 17, -1, -16, 18, 10, 32, 40, -85, 6, -33, -18, 10, 42, -13, -13, 27, 25, 19, -20, 21, 14, -15, -94, 30, 6, 20, -63, -41, -1, -36, -58, -97, -38, -19, -58, -73, -41, -15, 23, -67, -9, 18, 8, 14, -80, 3, -19, -10, -43, 0, -12, -10, -9, 54, 39, -84, -40, 5, 30, 17, 0, 17, 31, 14, 22, 21, 30, 28, 9, 23, -20, 14, -21, -38, 24, -8, 14, 16, 24, -20, 14, 17, 35, 20, 1, 8, -22, 13, -1, -19, 23, -7, 12, -8, 1, -16, 6, 9, 25, 5, 1, -15, -63, 15, -3, 14, -8, -37, 7, -8, 1, -45, 2, -11, 16, -13, -6, -11, 16, 6, -2, 27, -8, 2, -22, -12, 17, -7, -28, -29, 12, -7, 5, -7, 16, -37, -6, -40, -9, -89, 7, -10, -2, -48, -48, -44, -8, -66, -16, -86, -40, 6, 8, 23, -6, 11, -90, 9, -17, -17, -50, 32, -35, -15, -32, 31, 42, -77, 10, 5, 12, 5, 47, -4, -17, 34, 30, 13, -33, 22, 32, -8, -87, 49, 0, 15, -34, -33, 14, -34, -38, -80, -20, -40, -36, -56, -52, 7, 16, -54, 0, 36, -6, 50, -72, 6, -32, -6, -38, -4, -22, -9, -17, 55, 47, -66, -28, 12, 25, 8, -13, 17, 4, 12, 35, 30, -10, 40, -20, 0, 10, 38, -16, -19, 13, -26, 5, 9, 4, -23, 28, 26, -8, 30, -9, 3, 5, 22, -4, -26, 19, 3, 8, 12, 11, -21, 1, 12, -12, 10, 7, -36, -5, -2, 4, -18, 1, -7, 10, 0, 2, -24, 11, -25, -21, 12, -2, 20, -2, -4, -2, -2, 2, -6, -17, 5, 10, -7, -11, 0, -9, 4, -11, -17, 1, -30, 2, -46, -9, -75, 13, -23, -5, -15, -25, -48, -8, -64, -19, -61, -63, -9, 1, 13, -31, 17, -54, 5, -23, -63, -68, 19, 1, -31, -26, 13, 23, -88, 15, 6, -11, -23, 12, -22, -60, 12, 19, 11, -14, 2, 14, -2, -69, 38, 6, -2, -38, -20, 10, -42, -37, -52, -11, -77, -50, -49, -59, -10, 6, -73, 0, 35, 15, 39, -84, 27, -43, -9, -57, 2, -8, -23, -6, 54, 52, -84, -18, 12, 20, -1, -33, 18, 7, 33, 3, 20, 7, 26, 17, -16, 6, 43, -9, -10, -5, -23, 7, 12, 4, -32, 26, 15, 4, 23, -5, -18, 0, 12, -5, -21, -5, 8, 3, 5, -5, 2, 3, 11, 0, 12, 4, -7, -23, 6, 1, 6, 9, -16, 4, 2, -9, -26, -4, -16, 7, -23, -23, -3, 6, -10, -3, 5, -6, -14, -16, 5, -10, -20, -44, 2, -8, -14, 0, -11, 8, -24, 3, -16, -17, -68, 6, -8, -19, -14, -22, -48, -11, -46, -11, -43, -58, 1, -6, -10, -21, 18, -37, -9, -26, -47, -35, -37, -19, -15, -26, 32, 16, -67, -3, -15, -23, -10, 22, -33, -22, 20, 15, 13, -2, -4, -6, -6, -52, 29, 7, -14, -41, -1, 13, -59, -27, -51, -9, -61, -29, -53, -57, 15, -10, -78, 0, 32, 3, 50, -78, 29, -8, -29, -64, 21, -11, -5, -13, 44, 47, -80, -16, 20, 25, -1, -19, 21, 1, 24, 0, 15, 4, 30, 5, 0, 12, 47, -1, -9, 16, -15, 11, 1, 20, -19, 13, 6, -6, 12, 11, -18, -4, 15, -5, -4, 8, 9, 10, -1, 1, -6, 6, -4, 9, 4, 9, -24, -34, 12, 3, -6, -29, 4, 7, -7, -18, -21, -1, 2, 0, 8, 6, -18, 2, -2, -4, -10, -14, 3, -13, 6, -17, -13, -40, -22, -2, -2, -13, 6, -5, -45, -1, -35, -5, -48, -5, -11, -15, -40, -3, -20, -9, -31, -8, -22, -59, -13, -8, -17, -17, 8, -26, 8, -31, -27, -41, -12, -27, 1, -20, 23, 7, -78, 4, -17, -23, -8, 20, -23, -15, 8, 9, -1, -24, 5, 3, -5, -53, 11, -3, -26, -38, -14, 4, -53, -19, -50, -13, -68, -26, -48, -28, -7, -37, -73, 5, 21, 4, 34, -60, 11, -13, -18, -64, 8, -17, -23, -8, 15, 39, -67, -1, 12, 20, -10, -20, 17, 10, 8, -16, 22, 7, 9, 12, -4, 21, 22, 3, 4, 14, -26, 12, 1, 9, 4, -6, 12, -1, 6, 27, 3, 0, 11, -2, -11, 12, 0, 0, -15, 3, -7, 6, 5, -4, 9, 4, -19, -14, 9, -4, -9, 8, -3, 12, -11, -8, -8, 8, -12, 2, 7, -16, -1, -16, -6, -4, -14, -9, -9, -15, -14, -3, 3, 0, -5, -12, -27, -5, 12, -12, -18, 2, -15, -19, -19, 10, -30, 4, 0, 3, -31, 3, 4, 8, -3, -52, -1, -1, -5, -19, 8, -17, -7, -38, -16, -23, -18, 1, -1, -25, 5, 0, -43, 7, 3, -6, -33, 12, -27, -10, -2, 4, -23, 5, -28, 7, -25, -43, 10, 2, -11, -35, -23, -5, -26, -26, -37, -13, -51, -20, -27, -48, 6, -21, -62, -3, 14, 3, 15, -34, 9, -18, -28, -50, 10, -16, -29, -20, 10, 23, -61, 0, 7, 7, -7, -11, 21, 5, 10, 5, 13, -11, 4, 5, -20, 16, 15, -5, 17, 12, -8, -4, 7, 4, 11, 10, 15, -11, 18, 7, 4, -1, 17, -6, -16, 8, -9, 4, 3, 7, -6, 1, 3, -22, 3, 7, -19, 14, 15, -1, -21, 2, -1, -1, -7, -3, -5, 15, -3, -6, -8, -1, -11, -28, 5, 2, -18, -1, -4, 2, 1, -3, -8, -4, -6, -14, -6, -2, 9, 2, -13, 6, -6, 1, -2, 5, -2, -7, -1, -32, -45, -10, 6, 1, 6, -20, 3, -3, 1, 8, 3, -16, -1, -12, -10, -10, -6, -7, -3, -16, -13, -2, -59, -9, -4, 3, -13, -3, -35, -2, 1, -16, -15, -6, -20, -3, -12, -39, 4, 2, -21, -10, -20, 0, -24, -18, -20, -11, -46, -13, -24, -51, -3, -29, -39, 1, 10, -5, 11, -27, 8, -15, -29, -31, 3, -32, -34, -19, 14, 14, -58, 0, 9, 1, 6, -31, 16, -14, 11, 5, -2, -12, -15, 15, -11, 10, 17, -2, 4, 7, -4, -6, 17, -4, -11, 1, 5, -32, -33, -1, -25, 11, -4, -3, -13, -6, -21, -4, 3, 1, 3, -7, 2, -18, -40, 3, -11, -1, 0, 5, -4, 4, -31, 5, 3, -10, -8, 0, 3, -18, -18, -10, -6, 6, 4, -2, -3, -10, -1, 2, -5, -7, -10, 5, -8, -7, -20, -12, 0, -26, -2, 2, -2, -11, -20, -3, -4, -3, -9, -10, 0, 0, -25, 5, -12, -13, -2, -4, 2, -17, 1, -19, -9, -20, -1, -20, -1, -13, -34, -13, -22, 2, -25, 1, -17, -22, -43, -10, -29, -24, 3, -5, -11, -31, -60, 0, -12, -37, 9, -3, -6, -20, -2, -17, -36, -22, -17, -18, -34, -33, -24, -12, -2, -17, -59, 3, 12, -8, 6, -11, -16, -7, -6, -30, -3, -13, -48, -14, -13, 29, -46, -1, 6, -8, -1, -16, 2, -21, 7, 1, -4, -19, -5, -24, -12, 4, 20, -7, -7, -4, -25, 3, -11, -20, -12, 14, 5, -14, -45, -35, -16, 6, 3, -1, -34, -31, -23, 0, -2, -40, 5, -20, 3, -15, -37, -24, -10, 0, 13, 1, -1, -26, 3, -4, -2, -19, -5, -23, -15, -18, -17, -6, -19, -9, 4, 0, -8, -18, -9, -18, -2, -15, -7, -18, -14, -17, -18, -21, -15, 0, -2, 5, -19, 6, -23, -5, -9, 12, -14, -14, -28, 9, -22, 3, -5, -4, -7, 2, -8, -2, -13, -8, 0, 1, 2, -17, -24, -12, -27, -9, -5, -5, -13, -7, 0, -2, -9, -11, -1, -7, -9, -8, -15, -15, -34, -6, -12, -7, -1, 2, -2, -32, -17, 1, -35, -7, -21, -18, -32, -14, -6, -7, -1, -1, -16, -5, 10, 11, 12, -15, 9, -20, 8, -18, -18, -9, -31, -13, -10, 14, -43, 3, 13, 7, 4, -22, 20, -6, -7, -13, 24, 22, 11, 7, 0, 9, 6, -1, -19, -4, 7, 14, -2, 8, 15, 9, 5, 9, 6, 13, 3, -11, 13, -3, -13, 5, -22, 4, -11, -7, -27, -7, -2, -2, -8, -6, -8, -10, 15, -2, -8, -1, -8, 5, -18, -9, -3, 4, -26, -25, -27, -5, -5, -1, -2, 5, -15, -10, -5, -7, -11, -1, -1, -10, -16, -1, -20, -22, 2, -5, -11, 4, 7, 1, -8, 17, 3, -1, -14, -8, 0, -9, -17, -6, -15, 5, -15, -1, -6, -17, -1, -12, -1, -3, -12, -35, 4, -7, -12, -3, -10, 6, -1, -2, 6, -28, -14, 1, 4, -24, -10, -12, 3, -21, -26, -26, -9, -7, 0, 3, -15, -26, -5, -11, -31, -17, -25, -22, -27, -20, -39, -30, 2, -8, -18, 4, -4, -11, -1, -23, 4, -35, -7, -14, 5, -2, 5, -21, 8, 15, -14, -3, 8, -3, 11, -5, 26, -31, -13, 1, 6, -1, 3, -25, -2, 12, 5, -1, 6, -4, 21, 1, 3, 12, -1, 2, 10, 11, 4, -6, 3, -4, 23, -4, -2, -39, 6, 7, 13, -27, -9, -27, -5, -9, -19, -27, -12, -2, 3, 1, -4, -19, -12, -1, -1, -2, -18, -23, -13, 0, -17, -12, -18, -5, 4, 1, 12, -3, -7, -14, -7, 0, -2, -7, -10, -4, -25, -5, -1, -5, -2, 2, -7, -11, -17, -4, -3, 1, 1, 10, -22, -5, -35, -1, -5, -11, 6, 0, -13, -18, -6, -12, -11, -22, -20, -19, -26, -4, -13, -8, -13, 0, -23, -4, -18, -29, 3, 2, -21, 3, 5, 3, -44, -14, -11, 0, -3, -14, 4, 2, 7, -26, -16, 5, -25, -15, -3, -10, -18, -10, -21, -29, 8, -10, -46, -8, 9, -29, 15, -11, -25, -8, -2, -13, -23, 2, 0, 2, 15, 10, -26, -1, 2, -5, 15, -12, 19, 11, 13, 10, 0, 4, 10, 3, -7, 14, 12, -3, 16, 7, -10, -2, 6, 11, -2, 5, 1, -1, 2, -11, 2, 9, 16, -10, -11, -4, 9, 2, -13, 14, -4, 2, -33, 7, 6, -6, -5, -7, 5, 4, 9, 0, -12, 0, -5, -6, -11, -1, -30, -5, -15, -17, -8, -4, -7, -4, 14, -5, -13, -14, -3, -10, -7, -16, -17, -11, -21, -5, 0, -13, -12, 0, -6, -12, 6, -15, -14, -1, 11, -8, -9, 0, -26, -9, 7, -17, -4, -4, -12, -16, 10, 2, -28, -26, -12, -28, -28, -16, -45, -12, 7, 8, -20, -7, -3, 7, -15, -5, -30, -13, -24, -29, -2, -29, -47, -12, -10, -14, 10, 4, -1, -27, 5, -5, -28, -2, -9, 2, -41, -27, -20, -26, -7, -15, -25, -3, -2, 0, 9, -9, -17, -3, 2, -16, -26, -7, -32, -5, -11, 19, -19, 2, 13, 6, -23, -20, 4, 10, 7, 1, 13, -1, 4, 3, -2, 17, 1, 3, -7, 2, -44, -12, 7, -6, 0, -2, 13, -2, -18, -14, 4, 2, 15, -3, -12, -46, -16, 0, -35, -3, -1, -5, -17, -21, -7, 4, -2, 4, -5, -2, 0, -8, -3, -3, -3, -2, -5, 5, -24, -10, -7, -11, 13, 11, -14, -6, -15, -17, 2, -10, -6, -7, 12, -8, -8, -7, -12, -6, -5, 15, -6, 9, 0, 7, -6, -4, 5, 16, -11, 7, -5, -1, -29, 5, -2, 2, -5, -2, 0, -9, -16, -11, -19, -32, -23, -11, -12, -11, -10, -9, -13, -2, -21, 7, -6, -17, -6, -3, -17, 7, -33, -5, -10, -32, -29, 2, 3, -19, -11, 3, 10, -13, -11, 1, -19, 0, -18, -24, -19, -35, -47, -26, -22, -18, -12, 2, 2, -2, -3, -5, -17, -10, 11, -8, -20, -7, -14, -17, -8, 8, -19, -5, 13, -16, -10, -8, 7, -6, 11, -4, -6, 9, 5, -4, 15, -7, 1, -4, -1, -3, -4, -6, -5, 4, 14, 4, -12, 6, 15, 0, 5, -30, 11, -3, 3, 3, -8, 15, -10, 8, 3, -9, -6, 9, 1, -16, -13, -7, -3, 7, -1, -16, -2, 8, -5, -8, -6, 0, -7, -14, -2, -2, -24, -9, 6, 2, -2, -11, -4, -10, -10, -7, -1, -27, -25, -10, -9, -6, -3, 4, -17, -2, -4, -6, -7, 3, -20, 0, 0, -7, 2, -1, -19, -3, 1, -8, -4, 3, 12, -27, -3, 2, -22, -24, -7, -13, -28, 0, -25, -11, -2, -9, 6, -3, -5, -10, -27, 0, -20, -21, -3, 5, -10, 0, 0, -5, 6, -15, -2, 6, 1, -25, 13, -8, -30, -17, -2, -1, -22, 1, -5, -23, -5, -18, -21, 2, 21, -6, 7, -9, 0, -5, 9, -11, -11, -1, -13, -13, 2, 13, -16, -10, 12, 10, 3, -3, 12, 11, -10, -2, 6, 0, -3, 2, 12, 7, 9, -1, 1, 7, 3, 0, 6, 11, -14, 6, 10, -1, -12, 12, -1, 3, 2, -2, 0, 12, -6, 1, 4, 2, -9, 14, 8, -1, -9, 20, 4, -9, 10, 0, -16, -3, -14, 3, -14, -7, 6, -2, -2, 1, -9, -2, -6, -25, -4, 1, -12, 1, 7, -9, -4, -6, -24, -7, -26, 0, -6, -11, 17, -6, -9, 
  -5, -16, -5, -13, -1, -9, -4, 20, 15, -37, -5, -4, 0, 5, -7, -16, -3, -4, -29, -22, 10, -32, -31, -7, -1, -26, -11, -35, -26, -18, -24, -22, -1, -5, -36, -16, -17, -20, -29, -32, -34, -27, -23, -30, -38, -17, -16, -45, 1, 25, -37, -5, -26, -12, -40, 11, -26, -54, -25, -31, -36, -4, -8, -36, 5, 4, -17, 3, -16, -13, -27, 0, -21, -28, -15, -28, -18, 1, -17, -14, 2, -1, -10, 8, 9, -13, -4, -2, -18, -16, -9, -31, 5, 4, 2, 7, 4, 22, -18, 5, -10, -15, -1, 17, 7, -24, -17, 6, 18, 6, 3, 11, -1, -2, -11, -7, 11, -10, 0, -1, 0, -29, -15, 0, -8, -14, -2, 7, 1, -6, 4, 3, 3, 1, 1, -1, -4, -12, -9, -1, -18, 7, 10, -13, 10, 9, -2, 13, 6, -7, -1, 14, 0, -6, -1, -3, -3, -3, -9, 23, 0, 10, -8, -7, 15, -6, -1, 6, -5, 5, 0, -2, 0, 1, -22, 8, 2, -15, -31, -5, 16, -30, -13, 4, 2, -30, -13, -8, -25, 5, -15, -5, 1, -14, -20, -17, -5, -49, -34, -14, -29, -44, -31, -46, -22, -12, -18, -19, 1, -16, -20, -10, -19, -23, -19, -2, -20, -38, -30, -42, -34, 14, -6, -34, -5, -17, -27, -25, 11, -21, -22, 4, -7, -35, -26, -25, -18, 8, -8, -16, -1, 9, -4, -2, 10, -5, -25, 17, 7, -27, -31, -11, -16, -10, 3, -28, 1, 16, 3, -2, 2, -7, -8, 13, -1, -19, -35, -11, -2, 4, -15, 6, 2, 4, -3, -1, 5, -4, 8, 2, -3, -25, -15, -20, 0, 7, 6, 7, -1, 2, -6, 1, 9, 6, -7, -4, 4, 1, -5, -21, -12, 8, 1, 1, -2, 1, -7, 3, 11, -1, -1, 7, 29, 5, -3, -5, -1, 6, -8, 14, -3, -6, -1, -8, 7, -4, 0, -5, -21, -19, -3, -19, 0, -9, -1, 9, -1, -17, -11, -23, 5, -16, -25, -7, 6, -24, -7, -17, -11, -9, -20, -6, 0, -3, -23, -19, -6, -15, -37, -28, -37, -31, -36, -38, -14, -7, -11, -34, 2, -9, -26, 2, -19, -9, -9, -1, -36, -34, -11, -28, -25, -2, -12, -38, -1, 0, -13, -4, -19, -26, -17, -1, -39, -20, -13, -43, -22, -13, -4, -26, -2, 5, -15, 10, -1, 4, -24, 15, 12, 7, -5, 4, 5, 8, 8, 8, 4, 3, 6, -4, -2, 3, -3, 4, 20, 8, -12, 6, -6, 2, 7, 10, 7, -10, 8, -9, 8, 9, -24, 9, -6, 12, -13, 11, 0, -16, 11, 11, 6, -10, -13, -12, -6, 1, -11, 11, -15, 13, -16, -12, -13, -3, 9, 0, 6, 13, -3, -10, 11, -1, 0, 3, -6, 16, -5, -1, -6, -15, 1, 7, 1, 7, -14, 0, 2, -5, 0, -4, -2, -13, -9, -20, -7, -1, -5, 2, 0, -18, -13, -29, 4, -15, -19, 0, 5, -28, -14, -7, -13, -29, -28, 9, 9, 5, -15, -32, -5, -27, -39, -43, -43, -31, -34, -66, -25, -19, 8, -37, 2, 1, -29, -5, -26, -7, -12, -1, -37, -27, -33, -46, -15, 7, -16, -32, 0, 1, -17, 7, -4, -8, -25, -6, -21, -19, -16, -17, -12, 0, -7, -25, 4, 4, 0, 17, -4, -8, -5, 7, 4, 7, -9, 4, -3, 25, 10, -1, -8, 16, -4, -7, 10, 6, -14, 28, 11, 5, -9, -8, 9, -2, 12, 5, -3, -4, -7, -1, 7, 13, -22, -4, 17, 7, -34, 7, -8, 18, 7, 4, -2, 16, -8, 23, 21, 0, -6, 13, 6, 0, -18, -5, -11, 11, 14, -10, 4, 11, -13, 8, 4, -8, -8, 0, -3, -4, -1, -3, -6, 2, 2, 12, -2, 9, -7, -12, 7, -8, 0, 2, -6, -16, -18, -13, -1, 4, 2, -7, 0, -6, -16, -26, 9, -8, -13, 10, 16, -33, -6, -19, -17, -9, -36, 14, 1, -15, -23, -47, -4, -14, -28, -39, -49, -30, -24, -65, -44, -27, -19, -54, 0, 10, -41, -2, -33, -37, -30, 5, -54, -27, -30, -53, -21, -8, 0, -43, 8, -4, -15, -25, -9, -25, -15, -25, -17, -42, -24, -36, -20, -14, -8, -35, 2, 7, -8, -11, -4, -21, -11, -2, 0, -7, -11, -10, -12, -6, 8, -13, -5, -4, -11, 12, 0, -28, -12, 17, -7, 3, -10, 6, -11, 18, -9, 11, -5, 5, -21, 7, -11, -20, -24, 8, 6, 19, -21, 5, -20, -8, 1, -15, 0, 2, -6, 7, -2, -9, -22, 13, 5, -9, -30, -1, -15, -2, 1, 7, -7, 0, -6, 26, -5, 0, -10, 9, -15, -18, -17, -21, -3, 2, 14, -2, 1, 6, -11, -3, 8, 0, 0, 13, -4, -13, -18, -23, -6, 2, -9, -15, -2, -7, -18, -12, 7, -19, -7, -11, -6, -18, -9, -19, -8, -21, -21, -5, -4, -25, -14, -59, 16, -12, -28, -31, -36, -41, -19, -65, -30, -33, -35, -44, -4, -4, -26, -17, -24, -28, -18, -25, -47, -46, -30, -47, -23, -4, -8, -53, 4, 1, -21, -24, -18, -12, -33, -10, -35, -33, -24, -35, -26, -4, -10, -37, 7, -3, -21, 3, -7, -24, -17, -6, -4, -17, -11, -11, -8, -10, -6, -11, -7, 3, -16, 8, -7, -34, -7, 4, -14, -28, -5, -10, -14, -6, -11, -10, -4, -4, -25, 8, -6, -14, -1, 4, 9, 5, 9, -2, -10, 14, -14, -16, 1, -7, -17, 2, -3, -10, -21, 12, 20, -11, 10, 6, -25, -7, -20, -15, 4, -5, -28, -4, -2, -16, -14, 14, 1, -25, 7, 16, -21, 8, 8, 10, 1, 4, -6, -19, 14, -5, -2, 0, -13, -16, -6, -26, -7, -4, -24, 19, 2, 13, -26, -11, 2, -17, -27, -3, -11, -36, -17, -37, -17, -19, -30, 1, 4, -7, -21, -52, -1, -28, -19, -42, -42, -44, -25, -47, -32, -42, -10, -43, -4, 12, -39, -11, -32, -26, -18, -41, -54, -43, -40, -37, -16, -8, -6, -60, 2, 3, -29, -26, -16, -9, -27, -22, -31, -27, -19, -36, -26, -13, 19, -38, 6, 5, -23, -14, -10, -29, -16, -14, -17, -24, -18, -34, -19, -4, -11, -21, 3, 4, -17, -1, 8, -27, -14, -5, -24, 1, -24, -28, -8, -12, -21, 6, 3, 6, -23, -11, -3, -16, -14, -5, -17, -27, -17, -4, 0, -7, 6, -18, 4, 4, -3, 3, -4, -22, -8, 5, 3, -23, -18, -15, 0, 1, -11, -4, 1, -5, 1, -6, 8, -22, -19, 2, 9, -21, -10, 3, -10, -7, -14, 15, 1, 1, -9, -4, -19, -5, -2, 3, -22, -21, 2, -25, 0, -8, -6, -5, 8, -3, -20, -35, 7, -24, -19, -18, -9, -23, -16, -28, -23, -25, -42, 4, 6, -18, -22, -52, -16, -26, -22, -40, -32, -52, -26, -33, -28, -22, -18, -24, 3, 6, -38, -23, -25, -18, -13, -28, -43, -41, -30, -34, -35, -16, -6, -79, 1, 3, -25, -35, -21, -18, -39, -2, -23, -39, -34, -37, -18, -18, 0, -47, -7, 11, -22, -5, -15, -32, -8, -1, -19, -44, -17, -13, -14, -4, -6, -31, 8, -2, -18, -2, -18, -6, -1, 0, -5, -34, 2, -7, -2, 3, -18, -14, 1, 2, -34, 6, 1, -19, 2, 0, -2, -17, 12, 12, 5, 8, -4, -34, -1, -9, -28, 3, 4, -4, 6, 6, 7, -5, 26, 9, 4, 15, 3, 10, -4, 12, -2, 10, -2, -9, 0, -7, 14, -9, 3, 3, -2, -14, 3, 24, 4, 15, -4, 5, 2, -12, 5, 0, -5, -19, -2, -10, 0, 3, -21, -7, -4, -6, -13, -15, 33, -15, -23, -23, 9, -24, -27, -24, -25, -34, -26, -8, 0, -12, -34, -48, -23, -28, -21, -49, -59, -77, -25, -50, -20, -49, -21, -38, 1, 3, -45, -17, -37, -24, -26, -32, -42, -54, -26, -44, -34, -27, -8, -74, -9, -11, -23, -34, -14, -22, -25, -19, -37, -53, -25, -48, -26, -37, 6, -56, 2, 15, -9, 7, -33, -8, -1, 17, 9, -27, -15, 2, 4, -3, 0, -11, 2, 4, -5, -2, 2, -21, 0, -9, -5, -12, -2, 1, -9, -12, 4, -13, 1, 19, 2, -1, -4, -10, -3, 7, -10, -2, 3, 8, 4, 29, 11, -10, 1, 1, 16, 22, 1, 4, 20, 38, 42, -24, 10, 48, 18, 28, -12, 3, 1, -13, 0, -5, 28, -2, -3, 6, 15, -7, 24, 21, -2, 8, 3, 10, 9, -7, -1, 12, 4, -11, -1, 25, 14, -24, 1, 27, -16, 17, -9, -4, 0, -39, -12, -27, 30, -22, -24, -7, 24, -20, -22, -19, -14, -44, -47, 19, 9, -32, -40, -68, -12, -24, -44, -87, -69, -63, -44, -77, -27, -76, -16, -44, -2, 11, -33, -26, -61, -18, -18, -35, -52, -67, -39, -48, -27, -29, 9, -70, 1, -8, -25, -29, -22, -12, -42, -26, -51, -45, -28, -36, -24, -24, -8, -47, 2, 35, -29, 19, -19, -27, 1, 36, 7, -32, 2, 9, 9, 4, 21, -18, 3, 8, -6, -3, 14, -22, 2, 16, 21, -30, 1, 5, -8, 12, -31, 18, -5, 1, -10, 6, 10, -13, -10, 22, 3, 4, -2, 12, -10, 10, -4, -19, -7, -27, 6, 20, 4, -4, 11, 33, 36, 8, 7, 31, 12, 26, -14, 16, 4, 4, 0, 7, 17, -6, 4, 10, 43, 2, 3, 29, -1, 5, -24, 14, -3, 5, -11, 38, 5, -5, -1, 25, 35, -16, 3, 47, -1, 35, -17, 6, 3, -41, -11, -44, 67, -15, -33, -28, 2, -16, -24, -49, -13, -62, -64, 43, 14, -5, -28, -88, -23, -23, -45, -104, -85, -67, -73, -98, -45, -88, -8, -55, 7, 7, -36, -48, -74, -25, -25, -53, -76, -62, -54, -68, -21, -40, 1, -73, 7, -21, -29, -24, -39, -15, -42, -37, -72, -44, -37, -66, -32, -63, -8, -62, 5, 27, -7, 23, -48, -3, -5, 42, 12, -33, -26, -1, 12, 18, 15, -32, -3, -3, -33, 6, 15, -39, -5, 41, 15, -15, 0, 12, 1, 5, -13, 20, -6, 4, -10, 18, 9, -14, -6, 37, 17, -2, 2, 22, -8, 26, -36, 3, -4, -64, 11, 41, 14, -18, 26, 46, 33, 4, 2, 39, 12, 35, -54, 23, 0, -25, 3, -3, 35, -16, -10, 9, 37, 12, -6, 18, -6, 0, -25, 27, -2, 12, -6, 30, 3, -2, -8, 46, 40, -1, -10, 24, -4, 47, -7, 10, -4, -79, -13, -43, 65, -19, -26, -29, 10, -14, -23, -36, -38, -66, -94, 51, 5, -34, -51, -79, -25, -40, -65, -116, -88, -66, -59, -97, -56, -81, -6, -68, 1, 31, -62, -44, -103, -34, -32, -70, -83, -69, -46, -80, -29, -37, 6, -79, 7, -5, -28, -15, -48, -11, -39, -42, -62, -46, -30, -65, -38, -50, -18, -67, 13, 32, -33, 25, -42, -29, -24, 37, 4, -28, -46, -17, 6, 18, 35, -9, 1, -4, -21, 13, 28, -17, -31, 59, 15, -10, -31, 19, -3, 9, -28, 34, -9, 20, -21, 26, 10, -3, 2, 57, 17, 8, -21, 17, -5, 24, 14, 6, 3, -57, 28, 22, 9, 15, 4, 44, 27, 28, -28, 38, 9, 18, -89, 14, 3, -46, 10, -15, 40, 7, -18, 2, 39, 28, -24, 23, -16, 7, -57, 38, 3, 16, -6, 50, -24, -5, -2, 42, 46, 22, -11, 32, -10, 38, 6, 22, 3, -59, -15, -42, 76, -33, -34, 12, 49, -20, -28, 3, -10, -63, -95, 48, 13, -46, -61, -78, -33, -46, -36, -109, -79, -79, -34, -87, -62, -67, -34, -87, -1, 9, -44, -40, -93, -34, -26, -57, -93, -70, -34, -63, -39, -5, 16, -91, -8, -16, -36, -60, -38, -19, -29, -26, -47, -66, -31, -43, -35, -70, -31, -58, 2, 29, -24, 40, -79, -19, 1, 22, -21, -3, -3, -21, 27, 32, 27, -28, 1, 8, -4, 9, 36, -3, -12, 55, 6, -4, -6, 2, 16, -15, 5, 20, -4, 24, -13, -4, 10, -7, -19, 34, 5, 18, -18, -12, -7, 6, 35, 21, 1, -13, 13, -10, 10, 12, -22, 7, 16, 54, 7, -10, 5, -35, -29, 30, -1, -17, -1, -13, 31, -5, -13, -3, 26, 7, -20, -5, 2, 0, -8, 34, -3, 8, -2, 39, -12, -7, -4, 25, 30, 29, 10, 17, 7, 23, 20, 9, 8, -43, 3, -62, 57, -24, -20, 10, 45, -12, -9, -11, 16, -45, -101, 48, 2, -71, -56, -52, 2, -51, -44, -87, -57, -97, -29, -82, -64, -51, -67, -107, -1, -17, -37, -6, -90, -30, -19, -62, -96, -85, 2, -59, -50, 7, -37, -82, -4, -43, -33, -43, -28, -44, -37, -24, -49, -82, -5, -46, -34, -40, -36, -69, 2, 30, 4, 46, -99, -3, -4, -1, -26, 13, -6, -13, -15, 36, 25, -27, 4, 12, 12, -4, 34, -6, -15, 57, 5, 20, 2, -5, 15, -16, 14, 25, -2, 23, 15, -32, 10, 7, 9, 12, 8, 13, -3, -6, 11, -17, 36, 15, 4, -2, -3, -14, 4, 3, 6, 9, 10, 26, 3, 10, 20, -7, -10, 18, 9, 1, -22, 11, 12, -19, 7, 6, 25, 12, 4, -2, -4, 7, -7, 29, -3, 18, -2, 36, 2, -6, 13, 22, 14, 26, -4, 6, 12, 17, 23, 10, 3, -30, -13, -68, 43, -32, -6, 5, 21, 9, -12, -19, -9, -65, -93, 38, 7, -67, -30, -44, -3, -50, -26, -77, -38, -96, -28, -58, -48, -5, -73, -112, -2, -25, -12, -5, -76, -38, -2, -23, -90, -54, -26, -55, -39, 15, -45, -79, -10, -34, -4, -54, -11, -53, 5, -26, -48, -71, -19, -46, -10, -45, -41, -58, 1, 22, -6, 30, -45, -5, 5, -8, -32, 21, -28, -31, 13, 7, 25, -36, -2, 6, -8, -8, 6, 15, -4, 29, 11, 16, -39, -12, 7, -6, 13, 31, -2, 12, -10, -40, 7, 0, -1, 11, 4, 6, -15, -4, -2, -28, 17, 5, 5, -4, 12, -11, 4, -1, 10, 11, 19, 13, -14, -10, -11, 6, -2, 11, 1, 14, 10, 8, 26, -11, 2, 3, 31, 20, 4, -10, 7, -14, 6, 27, -3, 29, 3, 20, 10, 0, -1, 33, 0, 5, -7, -21, 2, 4, 11, 14, 5, -20, -20, -57, 31, -18, -26, 7, 16, -38, -16, -15, 5, -27, -66, 40, 10, -56, -49, -46, 7, -35, -43, -52, -31, -76, -46, -63, -51, -36, -63, -84, 1, -11, -32, -4, -58, -26, -33, -25, -72, -47, -30, -51, -22, 2, -10, -51, -3, -26, -31, -33, -27, -20, -24, -19, -42, -15, -40, -48, -11, 0, -36, -49, -6, 14, -17, 27, -4, -18, -9, 14, -5, 19, -17, -15, -15, -6, 17, -11, -6, 18, -10, 18, -11, 16, -29, 8, -13, 8, -14, -26, -23, -25, 20, 21, 4, 11, -7, -30, 2, 19, -20, 3, 3, -2, -22, -24, 7, -12, 7, 5, 0, 11, -8, -18, -9, 11, -4, 9, 16, 19, -8, -7, 2, -8, 15, 11, 0, 4, -2, -6, 9, 15, -2, -6, 0, 7, -10, -3, -1, -12, 15, 27, 2, 7, -3, 0, -5, 14, -1, -7, 2, 8, -9, 2, -1, -21, 9, 15, 1, -18, -8, -41, 13, -6, 2, -7, 23, -17, -14, 5, 0, -28, -54, 11, 0, -43, -28, -54, 7, -25, -36, -40, -37, -57, -35, -55, -18, -23, -40, -57, 0, -13, -36, -4, -31, -26, -23, -35, -61, -38, -39, -54, -47, -4, -25, -72, -6, -14, -24, -13, -15, -32, -21, -16, -40, -36, -30, -35, -26, -9, -16, -45, -4, 7, -3, 5, -15, -14, -16, 16, -28, 3, -18, -40, 1, -3, 3, -8, 3, -6, -18, -6, -9, -3, -13, 1, -18, -1, -19, -33, -18, -20, 14, -12, 2, 15, -15, -2, 6, 0, -24, 1, -5, 5, -22, 2, -8, -8, 0, 3, 4, 3, -3, -11, 1, 8, -5, 8, -16, 8, -11, -33, 0, 11, 23, 3, -2, 12, -2, 7, -4, -7, -2, 15, -7, -3, -11, -23, -1, -3, 1, 13, -2, 6, -2, -13, 6, 7, -1, 9, -14, 36, -13, -12, -1, -13, 3, 6, -3, -9, -21, -40, -2, -21, -21, 3, -18, -33, -10, -40, -7, -14, -34, 21, 1, -28, -29, -50, 5, -40, -21, -39, -22, -52, -13, -55, -34, -26, -38, -51, -2, 9, -43, -1, -32, -20, -19, -13, -53, -31, -18, -53, -31, -8, -22, -65, 1, -13, -39, -19, -20, -33, -17, -21, -15, -42, -24, -45, -20, -9, 1, -71, 5, 15, -2, 11, 0, -15, -14, 2, -23, 11, -23, 4, -24, 6, 4, -11, 1, 9, -7, -12, -5, -8, -17, 5, 6, 0, -32, -21, -16, 1, -6, -5, -2, 8, -9, 3, -4, 0, 8, -2, 0, 3, 16, 14, 7, 21, -13, 3, -1, -1, -7, 24, 12, -10, 2, 4, 6, 2, 0, 9, -2, -5, -18, -2, -1, 5, -7, 4, -12, -1, -8, 20, -13, 6, -9, 2, -10, -7, 23, 3, -2, 0, -5, -16, 6, -8, 1, 3, 14, -11, 0, -35, -3, -8, -5, 13, -5, -3, -24, -32, 1, -23, -16, -14, -30, -21, -13, -35, -15, -18, -26, -33, 5, -15, -20, -44, -3, -25, -19, -32, -50, -68, -41, -48, -13, -28, -30, -37, 0, 1, -18, 0, -22, -27, -16, -11, -43, -47, -31, -38, -26, 14, -23, -68, -4, -7, -28, 9, -1, -22, -15, 9, -17, -28, -16, -41, -18, 7, 2, -37, -5, 11, -6, 9, -8, -10, -19, -12, -19, 3, -21, 2, -15, -3, 3, -18, 7, 11, 4, 7, 6, 11, -16, 8, -4, 7, 0, 4, -13, 7, 14, -10, 2, 23, 17, 23, -1, -1, 6, 14, -10, -5, 8, 6, 12, 24, 2, 0, -10, -1, 24, 7, 7, -1, 18, 13, 7, 11, 9, 20, 6, 10, -4, 1, 8, -6, 17, 17, 23, -3, 12, -2, 34, 7, 16, 14, 9, 4, -10, 8, -2, 18, -1, 17, 1, -10, 8, 20, 14, -23, -2, 9, 15, 8, -12, 5, -4, 9, -9, -38, 9, -17, -6, -12, -1, -35, -28, -22, -9, -16, -21, 2, 2, -21, -33, -33, 1, -28, -13, -18, -42, -55, -16, -46, -24, -17, -26, -39, -2, -2, -52, 1, -29, -29, -10, -5, -33, -40, -17, -36, -31, 3, -7, -59, 3, 2, -25, -6, -10, -23, -21, -8, -32, -34, -6, -37, -18, 4, 8, -39, 0, 1, -5, 13, -5, 1, -14, 25, -1, -4, -14, 5, -4, 15, 4, -21, -3, 5, -30, -2, 8, -24, -13, -21, -5, 2, 4, 0, -20, 3, 13, -11, -5, 18, -18, 6, -2, 17, -3, -10, -4, -3, 6, -9, -11, 17, 25, -24, 2, 12, -1, 28, -6, -2, 11, 13, -2, 13, 11, 16, -8, 15, 7, -12, -3, 10, 9, 7, 17, 13, 1, -7, 3, 9, 0, 12, 14, 7, 20, 6, 2, 5, -1, 0, -12, -8, -1, 18, -1, -30, -4, -3, -6, 15, -3, 12, 1, -7, -14, -41, 14, -23, -18, -8, -10, -26, -16, -37, -8, -9, -27, 5, 4, -10, -24, -43, 9, -26, -17, -26, -36, -46, -15, -68, -31, -31, -27, -51, 1, 9, -28, -13, -34, -29, -11, 1, -42, -44, -14, -36, -29, -9, -14, -71, -5, 12, -13, -7, 6, -23, -27, -15, -27, -27, -17, -21, -19, -7, -3, -33, 5, 18, -5, 12, -3, -4, 32, 21, 3, 16, 8, 9, 14, 17, 19, 0, 3, -3, 8, -18, 22, -38, 5, 25, 2, 6, -5, 8, 0, 8, -26, -22, 4, -6, -1, 4, -4, -18, -28, 6, 9, -29, 16, 18, -19, 11, -17, -12, -6, 2, 12, 17, 10, -3, 3, 27, 15, -3, 1, 11, -20, 8, -2, 2, -2, -7, -3, 11, 2, -7, 0, 5, 13, -7, -1, 21, -3, 1, 1, 5, 5, 9, 6, 5, 10, -2, 1, 7, -6, -12, -5, -33, -2, 5, 5, 12, -3, -1, -22, -50, 13, -17, -24, -15, -11, -32, -5, -45, -13, -22, -33, 14, 4, -8, -24, -24, -18, -24, -15, -31, -38, -36, -12, -43, -25, 3, -16, -60, 6, 9, -20, 0, -33, -31, -10, -6, -37, -46, -9, -21, -20, 0, -9, -55, 4, 1, -19, 1, 0, -30, -14, 8, -21, -26, -5, -16, -9, -9, -11, -22, 0, 23, -6, 5, 3, -33, -17, -13, -22, -31, -23, -15, -4, 12, 14, -17, 4, -1, -2, -23, 13, -21, -5, 7, 2, -27, -14, -7, 5, -11, -25, -8, 5, -15, 9, -14, -6, -22, -20, 11, -17, -15, -18, -15, -19, 5, 6, -5, -7, -8, -14, 16, 1, -5, -2, 11, -8, 19, -12, -30, -17, 4, -12, 17, 8, -7, -4, 0, -5, -1, -6, 12, -4, 13, -6, 0, -3, -4, -4, 6, 7, 8, -9, -8, 15, -8, 0, -6, -12, -1, -1, -22, -10, -10, 6, 6, 11, -1, -15, -32, 0, -35, -18, -11, -5, -28, -15, -45, 0, -26, -18, -3, -2, 1, -33, -25, -8, -49, -24, -9, -32, -54, -23, -51, -31, 1, -6, -57, 2, -2, -23, 7, -11, -25, -2, 1, -25, -48, -25, -30, -31, 11, -14, -48, -4, 6, -11, -20, -17, -17, -2, -9, -20, -32, -12, -28, -4, 7, -20, -19, 1, 9, -27, 16, 2, -17, -16, -3, -13, -20, 1, -10, -9, 22, -13, 2, -1, 5, 6, 25, 7, -29, -10, 8, 6, -20, 3, -2, -15, -9, -15, -12, 3, -12, -12, 0, 8, -27, -7, -1, -27, -17, 5, -2, -12, -12, -15, 3, -3, 24, -11, 13, 4, -4, 1, 7, -7, 7, 5, -11, -4, 10, 12, 20, 3, -4, -9, -2, 17, -1, -7, -3, 10, -6, 1, -6, -6, -2, -18, 3, 4, -3, -7, -5, 5, -6, -2, -9, -25, -4, -2, -24, -9, -25, -18, 12, 0, -13, -20, -34, 16, -14, -15, -13, -36, -42, -8, -40, -8, -4, -21, -6, -2, 8, -29, -27, 0, -46, -36, -20, -53, -37, -34, -55, -34, -26, -12, -40, 0, 1, -21, 28, -20, -13, -1, -7, -38, -41, -31, -39, -23, 16, 18, -54, -4, -10, -4, 10, 8, -19, -14, 10, -3, -22, -9, -41, -20, -8, -12, -20, -1, 1, 9, 20, -1, -3, -6, -1, 1, 9, -10, -14, -14, 3, 23, 8, -5, 4, 18, -6, 2, 18, -6, -1, -1, 18, -9, -27, -1, -8, 12, 1, 0, 5, -37, -9, -5, 12, -17, -1, -13, -2, -20, -7, -20, -6, -12, 18, 1, 10, -14, 2, -7, -7, 2, 3, -10, 13, -20, -29, 3, 1, 1, -6, 6, -1, -3, 8, 6, -9, -7, 15, 15, -13, -5, 4, -8, -2, -15, 2, 0, 5, -7, -6, 8, -18, -1, 10, 0, -1, 1, -13, -3, -13, -5, 10, 4, -6, -16, -11, -1, -22, -25, 4, 6, -39, 0, -23, -12, -14, -28, -30, 2, -20, -40, -17, -5, -38, -24, 4, -29, -52, 1, -18, -24, -18, -23, -44, -2, 4, -29, -11, -5, -36, -14, 3, -25, -39, -1, -22, -31, 18, 0, -52, -4, -18, -20, -3, 10, -16, -5, 6, 9, -18, 0, -15, -8, 4, -5, -10, 5, 10, -15, -6, -5, -12, -15, 6, -6, 12, 1, -20, -1, -6, 22, -11, -1, 15, -13, -10, 5, -8, -15, 12, 8, 11, 0, -13, -15, -6, 6, 5, 4, 2, -10, 1, 4, -4, -3, 29, -15, -3, -1, 6, -23, -15, -2, 7, 4, 16, -19, 11, -2, -6, -1, 16, 0, -25, 0, -18, -7, 3, 6, -15, -4, 7, 0, -11, -3, -3, -2, 10, -4, -14, 1, -10, -12, -15, 7, 12, 
  1, 11, -6, -11, 11, -12, -3, 5, 9, -32, -4, -36, -1, -9, -2, -1, -3, -8, 8, 2, -14, -18, 1, -30, -37, -38, -22, -18, 1, 18, 23, -33, -10, 4, 16, -10, 2, -7, 19, 4, 9, -3, -23, -2, 26, 17, -5, 8, 0, 2, 9, 7, 2, -17, 29, 15, 14, 22, -29, 14, 17, -7, -9, 30, 4, -8, -17, -3, 23, -17, -31, 0, 10, 8, -20, -24, -26, -5, -4, 8, -2, -2, -20, 0, -21, -14, -21, -7, -12, 7, -17, -23, -26, -10, -11, -2, -1, 1, -14, 2, -1, -14, -32, -6, -3, 6, -14, -4, -10, 11, -4, 6, 2, -17, -22, -13, -12, -3, -1, -5, 7, -17, -13, 5, 7, -4, -3, 5, 5, -1, 0, -14, 4, 0, 3, 13, 17, -7, -1, 3, 0, -12, -17, 12, -3, 8, -1, 13, 13, -8, 11, -13, 15, -29, 1, 14, 4, -4, 13, -3, 2, -6, -8, -33, -2, -6, 0, -7, -4, -32, -1, -9, -1, -1, -13, -17, -1, -2, -41, 1, -5, 4, -6, 14, 1, 2, 10, 2, -16, 17, 21, -45, 2, 8, -27, -12, 7, 30, -2, 2, -4, 8, 6, -23, -30, -9, -10, 2, 0, 22, -32, 15, -5, 15, -31, 8, -9, 20, 10, -4, -2, -17, -11, 13, 6, -14, -34, -16, -4, -33, -42, -10, 1, -21, -27, -42, -21, -22, -3, -9, -2, 6, -21, 6, -16, -21, -25, 10, -10, -10, -4, -12, -17, -10, -14, -3, -7, 0, -20, 10, -11, -37, -9, -4, -1, -7, 10, -7, -9, -3, -19, -1, -1, 11, -6, -1, -5, -10, -14, 12, -19, 11, 18, 12, -4, 6, 1, 6, -3, -12, -5, -25, 0, -8, -7, 10, 11, -37, 8, -18, -18, -1, -1, 18, 4, -16, 5, 16, 3, -2, -2, 2, -6, -1, -13, -32, 4, -20, -2, 8, -4, -6, 0, 1, 7, -8, 0, -12, -12, -17, -6, -6, 1, 3, -10, 0, 7, -6, 15, 22, 0, -12, 10, 9, -7, -45, 4, 16, 6, 5, -8, -29, 0, 6, 4, -7, -6, -21, 5, -1, 3, -4, -33, 11, 7, -6, -22, -12, 0, 7, -4, 2, 10, -2, 10, 4, 6, 8, 5, 16, -10, 10, 2, -4, 5, -3, -9, -25, 15, -24, -15, -23, -10, -36, 5, -13, -31, -21, -7, 17, 1, 1, -8, 11, -8, -10, 1, 5, -2, -22, -20, -29, 4, 8, -9, -11, -4, 9, -10, -2, -4, -22, -5, 2, 0, -14, -35, -6, -22, -13, 5, 5, -2, -13, -8, -6, -3, -10, 5, 13, 24, -24, -23, -9, -11, 19, -16, 0, -4, -8, -17, 20, 18, -10, -11, 0, 20, -4, -19, -18, -32, -8, -12, 4, 0, 10, -10, 8, 1, 4, -1, -3, 11, 13, -10, 13, -4, 2, 10, 9, -1, -13, -19, -25, 5, -7, 8, 10, -9, -16, -9, -12, -5, 3, -2, -13, -2, 11, -24, 8, -12, -17, -28, 9, -25, -35, -11, -30, -21, 9, 12, -44, -7, -8, -25, -11, -20, -23, -13, 12, -9, -22, -28, -4, -6, 10, -19, 14, 1, -1, -15, 2, -12, 0, 4, 11, 1, -13, -13, 2, 10, 9, -11, 6, 0, -7, -19, -9, 16, -11, -4, -25, 11, -14, 6, -4, -25, -11, -4, -5, -1, 1, -20, 1, -7, -14, -5, -11, -17, 10, 4, -16, -9, -23, -12, -13, 7, 0, -30, 14, -1, -10, -10, -9, -26, 4, -12, -4, -18, 5, -4, 13, -4, 11, -24, 2, 4, -13, -42, 7, -7, -18, -46, 3, 2, -22, 12, -11, -4, -3, -24, -14, 0, 4, -11, 10, 15, -13, -12, -15, -10, 1, -19, 15, 2, 3, -11, 9, 7, -10, -4, -5, 19, 5, 7, 6, -7, -3, -1, 24, -1, -9, -6, -10, 1, -16, -1, -6, 1, -21, -10, -16, -1, 9, 1, -1, 9, -3, 6, 7, -4, 12, -22, -31, -29, -40, -13, -36, -23, -2, 1, -20, 1, 9, 13, -17, 2, -3, -60, -4, -18, -5, -45, -59, -26, -22, -18, 5, 2, 1, -3, -7, -10, -24, 6, 6, -6, -4, -42, -23, 4, 4, 9, 3, 4, 5, 0, -19, 10, -27, -4, -18, 9, -52, -22, -18, -40, 4, 2, -8, 1, -11, -9, 10, -12, -12, -24, -13, -4, 14, -21, 10, -11, 3, -12, -8, 1, 2, -13, -3, 3, -33, -14, -8, -5, 3, -8, 3, -13, -27, -1, -1, -6, -17, -43, -36, -10, -3, -23, -1, 8, -50, -13, 1, -19, 4, -9, 0, 0, 1, -26, -11, 4, -4, -15, -8, -5, -8, -33, -15, -17, -7, -2, 5, 7, 2, -16, -16, -20, 0, -11, -3, 10, 9, -19, -12, -1, -3, -3, 10, 5, -3, -7, -1, 4, -1, 0, 7, -8, -3, 4, 13, 2, 12, -4, -7, 2, -5, -31, -1, 2, 15, 3, 6, 16, 3, 11, -1, 7, 13, 6, -12, -3, -8, -33, -35, 2, 7, 0, -28, -12, 3, 13, -19, -34, -22, 6, -5, 2, -18, -14, -2, -14, 13, -15, 7, -40, 8, -5, -25, 14, -11, 8, 5, 1, -4, -30, -19, 25, -5, -35, -20, -8, -28, -39, -47, 2, -18, -12, -13, 2, 4, -23, 14, -1, -32, -31, 21, 3, -26, 14, -2, 3, 0, -20, -12, 0, -7, -27, 7, -1, -33, -10, -23, 4, -14, 9, 9, -16, -9, -12, -27, 3, -9, -24, 1, -23, -22, -34, 9, -26, 6, 11, -9, -27, 3, 14, 10, -1, 10, -2, -18, -14, -6, -21, -16, -5, -12, 0, -9, -25, 12, -6, 18, -3, 15, -4, -3, -13, 13, -10, -2, 0, 14, -13, -34, -15, -7, -5, -10, 2, -10, 8, 3, -3, -10, -2, -9, -36, 6, -10, -58, -8, -4, 9, -10, -2, 21, 7, 9, -13, -18, 9, -11, -24, -16, 18, 11, 26, 16, 3, -35, 2, 2, 11, -11, 6, 16, 21, -17, -7, 0, -1, -1, -7, -40, 4, 9, 3, 10, 2, -23, -19, 7, 5, -26, -2, 6, -19, -13, -2, -4, 20, -17, -4, -5, -28, -39, 9, -21, -34, -27, -29, -14, -26, -24, -32, -11, -21, 0, 0, -1, -20, 16, -19, -40, 11, 10, 1, -41, -18, -1, 11, 13, -2, -26, 5, 12, -22, 3, -3, -20, -7, 10, 3, -30, -22, -14, -16, 3, -1, -6, 1, 0, -7, -8, -6, -28, -8, -2, 4, -1, -36, 3, -17, 0, -7, 1, 2, -9, -40, -8, -1, -12, -14, 16, 36, 10, -18, -7, -17, -13, 0, 19, -6, -11, -14, -12, 5, -24, -36, -15, 10, 11, -16, 3, -25, 4, 13, -5, -3, -11, -14, -27, -3, -6, -14, -3, -21, 2, -15, -47, -34, -20, 12, 11, -2, 13, -28, 14, -25, 8, 14, -7, -35, -18, 11, 17, 4, 7, 3, -25, -11, -19, -11, -9, 9, 8, 2, -18, -6, -24, 2, 6, -11, 4, -11, 4, -9, 3, -16, 8, -11, 11, 2, 7, -4, 3, 4, -3, -16, -4, -15, 3, 0, 1, -32, -42, 10, -24, -50, -34, -32, -38, -25, -38, -7, -22, 7, -30, -5, 2, -34, 17, -25, -36, 16, 11, -6, -38, -3, -7, -7, 15, 13, -16, -5, 11, -2, -31, -3, -12, -24, 17, 6, -34, 3, 8, -36, -7, 0, 9, 5, -6, -44, -21, -20, -4, -9, 0, -4, -12, 4, 2, -38, 0, -9, -19, 1, 4, -32, -10, 6, -13, -17, -3, 9, -11, 0, 14, -4, -14, -16, 22, 1, -3, -19, 12, 24, -11, -4, -9, 15, -12, -5, 8, -4, -1, -7, 9, 1, -34, -28, -28, 3, -22, -8, -9, -3, -32, -10, -35, -27, -35, -2, 20, 3, 18, 6, 9, -12, 4, -22, -5, -46, -44, 15, 20, 2, 29, 24, -51, -6, -23, 15, 6, 8, 1, 10, -3, -7, -16, 14, 9, 4, 2, -15, 8, 2, 7, -9, 23, 8, -4, 23, 35, 19, -4, 9, 20, 0, 18, -11, -4, -2, -11, -27, -62, 22, -33, -56, -58, -21, -35, -12, -67, -38, -43, -13, 12, 2, 13, -14, -16, -26, -11, -4, -10, -32, 5, -39, -22, -13, -11, 8, -13, 0, 8, -24, -1, -23, -31, -20, 16, -1, -13, -18, -3, 0, 7, -21, 20, 1, -11, -3, -6, 10, -17, -6, 4, -8, 1, -11, 6, -10, -14, 1, -7, -1, -8, -17, 7, 1, -10, -28, -20, -5, 3, -22, 4, -31, -9, -5, 9, -4, -4, -7, 5, -7, -7, -3, 7, 11, -7, -2, 7, -4, 7, -6, -2, 1, -17, -4, -46, 1, -30, 6, -44, -35, -32, -10, -44, -25, -25, -3, -23, 5, 9, -3, 9, -41, -2, -24, -26, -42, -6, 10, 21, -16, 26, 19, -75, -6, -11, 14, 10, 14, 17, 7, 13, 11, -2, 16, 23, -13, 14, -17, 7, -5, -5, -4, 32, 6, 6, 11, 37, 22, -4, 10, 23, -3, 17, -44, 13, 4, -12, -28, -70, 30, -32, -57, -97, -11, -9, -29, -63, -36, -64, -6, 12, 1, 15, -18, -7, -73, -39, -38, -17, -13, -9, -24, -28, -13, -14, 7, -35, -4, 14, -20, 15, -16, -20, -20, 21, -10, -30, -9, -12, -6, 9, 16, 0, 2, -1, 4, -15, -4, -2, -24, -15, -6, 2, -6, -9, 5, -25, 16, -7, 2, -4, -8, -8, -3, -7, -13, -12, -8, -10, -40, -19, 2, -10, -14, -1, -6, 3, -1, -11, -13, -7, -21, -14, -15, 17, -7, -5, -16, 6, -6, -15, 2, -43, -23, -54, 16, -14, -23, -77, -72, -27, 6, -33, -8, -40, 0, -14, 1, 41, -9, 23, -94, 1, -9, -18, -42, -44, 19, 9, -12, 30, 20, -102, -24, -9, -16, 5, 22, 6, 4, 28, 18, 4, 17, 20, 0, 19, -27, 18, -19, -44, 12, 45, 17, 12, 31, 40, 29, 10, 12, 26, 9, 41, -89, 20, 3, -19, -33, -92, 43, -36, -64, -127, 1, 9, -24, -73, -41, -65, -24, 25, 6, 15, -46, -23, -78, -26, -32, -42, -39, 5, -38, -43, -13, -16, 28, -72, 4, 9, -10, 6, -27, 14, -26, -17, -15, -3, -21, -11, -22, -8, 13, -2, 8, -8, -35, -18, -7, 7, -31, -22, 0, -10, -14, -8, -26, -28, 9, -12, 0, 13, -36, -3, -12, 5, -17, 9, -15, -1, -18, -29, -9, -10, 6, -18, -6, 9, -11, 21, -14, -20, -11, 13, 7, 11, 9, 7, -8, 2, -11, -6, -4, -36, -3, -76, -1, 4, -5, -79, -50, -19, 4, -41, -9, -62, 4, 8, -3, 40, -3, 20, -81, 8, -95, -24, -44, -52, -7, -6, -47, 26, 27, -108, -25, 8, 5, 0, -14, -4, -20, 2, 0, -14, -34, 9, -30, 11, -37, 26, -16, -52, 13, 27, 14, -7, 26, 42, 24, 8, -36, 21, 12, -1, -82, 18, 12, -32, -10, -82, 45, -27, -54, -121, 8, -24, -10, -59, -53, -66, -31, 27, 1, -5, -47, -16, -79, -36, -38, -41, -53, -37, -42, -51, -42, -10, 15, -84, 2, 20, -28, 8, -42, -34, -38, -4, -18, -36, -33, -21, -8, -2, -5, -17, -4, -15, -25, -10, -17, -34, -7, -9, -9, -38, -30, -3, -5, -2, -12, -1, 5, 1, -25, 6, -11, -4, -13, -8, -14, -7, -14, -10, -19, -8, 16, -11, 4, -6, 0, 16, -25, -22, -20, 23, -16, 4, -5, -7, -5, 3, 8, -1, -2, -36, 24, -78, 23, -10, -9, -34, -13, -6, -17, -60, -10, -86, 1, 1, 2, 41, -25, 13, -95, 16, -28, -8, -63, -37, -48, -27, -39, 6, 30, -109, -18, 16, -19, -16, -11, -4, -43, 10, -15, 1, -57, -31, -26, -18, 6, 10, -16, 4, 15, 35, 9, 3, 39, 55, 17, 29, -67, 2, 23, -10, -51, 22, 12, -59, -19, -66, 53, -43, -45, -109, 36, -46, -31, -36, -43, -54, -55, 7, -3, -14, -26, -3, -53, -19, -21, -32, -40, -43, -32, -50, -18, 7, 0, -86, 1, 13, -4, 9, -29, -31, -25, 5, -17, -34, -34, -11, -16, -6, -13, -12, 3, -18, 4, -4, -6, -23, -24, -5, 9, -17, -33, 3, -4, -11, -31, -7, 3, 4, -29, -30, -2, -3, 2, -11, 4, -5, -31, -21, -13, -31, 5, -10, -4, 6, -6, -1, -16, -16, -1, 14, -12, 8, -24, -13, 7, -4, -5, -3, -1, -33, -8, -104, 12, -30, -6, -25, 8, -3, 9, -27, -2, -69, -36, 13, 5, 49, -37, 21, -76, -23, -42, -43, -51, -21, -23, -22, -50, 26, 33, -115, -7, 21, -22, -18, 12, 22, -86, 27, -24, 0, -57, -57, -6, -48, 9, 22, -20, 38, 1, 10, -3, 32, 41, 42, 23, 34, -58, 0, 24, -13, -21, 19, 13, -44, -17, -53, 59, -60, -47, -84, 44, -45, -23, -15, -20, -41, -61, 7, -5, -21, -31, -1, -43, -30, -30, -1, -35, -38, -23, -38, -24, 0, 0, -80, 4, 10, -1, 18, -26, -1, -21, -15, -20, -29, -17, -28, -30, -4, -14, -17, 1, -6, -8, -9, -5, -4, -24, -10, -1, -10, -24, -17, -23, -18, -21, -2, -3, -16, -11, -9, -3, -8, -15, -19, -4, -12, -14, -14, -17, -16, -20, 1, -2, -19, -21, -25, -29, 1, -2, 4, -37, 13, -8, -10, -7, 10, -16, -16, 2, -28, -29, -78, 2, -24, -17, -17, 10, -22, -14, -8, -8, -53, -83, 7, 5, 35, -14, 19, -20, -13, -37, -69, -52, -18, -20, -37, -30, 6, 27, -123, -6, 21, -4, -30, -11, 26, -47, 4, -32, 2, -43, -63, 6, -69, 13, 24, -12, 36, 15, -9, 5, 23, 16, 17, 7, 38, -36, -20, 25, -34, 23, 26, 12, -40, -35, -55, 58, -37, -25, -75, 42, -44, -29, -39, 9, -41, -52, -1, -3, -30, -20, 10, -59, -43, -18, -18, -60, -49, -27, -49, -19, 10, -8, -76, 0, 18, 2, 28, -28, -1, -19, 29, -4, -6, -20, -11, -32, 2, 4, -18, -2, -10, 22, -26, 1, 15, -25, 0, -11, 10, -14, -5, 1, -17, 13, -1, -1, -7, 14, -17, 2, 2, -21, -3, -5, -14, -2, -17, 7, -13, -5, -5, 0, 2, -3, -5, -3, -10, -7, 7, -16, -7, -3, -6, -4, -15, 1, -7, -4, -23, -22, -48, 12, -19, -19, 4, -12, -32, -11, -29, -13, -16, -68, -11, 3, 24, -16, 14, 7, -5, -21, -65, -47, -9, -20, -37, -35, -23, 34, -108, -10, 6, -17, -43, -28, 18, -65, -14, -51, 9, -43, -77, -36, -43, 24, 30, -7, 37, 17, -11, -13, 16, 17, 15, -6, 37, -42, -7, 7, 8, 13, 25, 7, -23, -21, -33, 49, -24, -25, -58, 39, -48, -33, -21, 4, -30, -49, -2, -1, -7, -22, -1, -32, -21, -15, -6, -27, -31, -21, -29, -22, 7, -17, -63, 0, -3, 2, -1, -18, -3, -19, -31, -14, 11, -25, -8, -28, -9, -5, -20, -2, 3, 2, -6, 10, 5, -13, 14, 4, 1, -35, -10, -9, -22, 11, 8, 5, 0, -10, -2, 0, 5, -7, -24, -21, -19, -14, -68, 9, 5, -3, 11, -6, 6, -5, 6, -19, -4, -2, 7, -9, -12, -17, -17, 0, 6, -16, -15, -4, 4, -6, -29, 1, -6, -5, -12, -1, -5, -12, -30, -4, -22, -39, -25, 0, -10, -20, -4, -14, -7, -23, -38, -19, -13, -16, -43, -24, -18, 24, -61, -4, -7, -11, -66, -11, 11, -52, -22, -59, 11, -43, -61, -24, -40, 8, -14, -5, 19, 3, -15, -32, 18, -2, -1, -22, 31, -41, -30, 9, -21, 8, 20, 4, -18, -9, -26, 25, -15, -23, -17, 3, -53, -31, -39, 19, -15, -31, -10, 2, 3, -18, -14, -28, -21, -17, -21, -67, -30, -25, -64, -12, 7, -14, -51, -1, -5, -6, -2, -1, 3, -12, -7, -9, -5, -13, -41, -5, -2, -10, -20, -1, 9, -14, -13, -8, 10, -22, 3, -5, 4, -17, -34, 4, -8, -13, -5, 2, -16, -5, -7, -13, 0, -5, -1, 8, -28, -8, -16, -13, -2, -8, -14, 6, -11, -2, -6, -3, -10, -3, 1, -5, -1, -17, -9, -9, -12, 3, -8, -2, -18, -13, -16, -10, -10, -2, -2, 10, -15, 11, 4, -2, -19, -24, -9, -2, -14, -36, -20, -5, -13, -2, -20, -25, -34, 13, -42, -26, 7, -10, -29, 5, -3, -5, 2, 6, -4, -23, 5, -14, -9, 7, 4, -28, 2, 12, -22, -5, 28, -5, 2, -13, 20, 2, 7, 0, 22, 1, -12, 2, 6, 4, 7, 3, -19, -30, -11, 19, -9, -20, -19, -17, -24, 0, -62, -3, -16, -11, -14, -4, -13, -6, -18, -14, 13, -8, -24, -34, 9, -9, -10, -2, 3, 0, -26, -5, -16, -27, 10, 0, -11, 14, 0, 6, 7, -4, 3, 6, 14, 2, -1, 2, 10, -6, 0, 11, 3, -6, -9, 5, 2, 4, 3, 2, -18, 1, 2, 3, -19, 2, -4, -10, 1, 0, 0, -14, -28, -30, -30, 18, -12, -1, 6, -2, 4, 9, -12, 11, -8, -8, 2, 16, 6, -9, 5, -12, 6, 7, -13, 1, -12, 0, 1, 3, -4, 6, -5, -5, -11, 0, -33, -3, 13, -10, 7, 5, 2, -26, -6, 13, -36, 0, -15, -44, -44, -17, -21, -6, -3, -13, -29, -5, -11, -33, -15, 11, -1, -3, -3, 0, -18, -26, 1, -2, -1, -5, -2, -2, 6, -23, 1, 11, -1, -4, 12, 14, 0, -47, -3, -17, -14, 1, -3, -5, -13, -9, -5, 6, -33, -23, -30, -20, -29, -21, -53, -34, -4, -12, -9, -3, -7, -10, -16, -5, 6, -12, -28, -37, -24, -32, -58, -11, -7, 3, -18, 6, -3, 1, 21, -17, 10, 7, 4, -13, -11, -8, -2, -8, 6, 9, -10, -2, 5, -6, 0, 21, -5, -4, 11, 14, -3, -11, 20, 0, -28, 3, -3, 2, -10, -40, 0, 11, -4, -24, -11, 8, -16, -32, -33, -21, 12, -2, 2, -4, -7, -23, -20, 2, -3, -13, 8, -26, -14, -19, -27, -23, 21, -9, -2, -6, -12, 4, -20, -9, -5, -8, -1, -19, 0, -1, -26, -20, -4, 5, 0, -7, 7, -15, -4, -6, -13, -24, -26, -34, -29, -33, -22, -21, 14, -17, -35, 2, 10, 4, -2, 11, -20, 2, 6, 14, -43, 8, 0, -6, 9, -23, 3, 1, -16, -1, -4, 3, -27, -25, -7, 1, 1, 5, -4, -8, 9, -13, -12, 1, -9, -37, -15, 14, -27, -24, -2, -8, -53, -11, -12, -18, 4, 5, -10, -4, -12, -31, -26, -6, -18, -12, -3, -33, -38, -55, -41, -7, -16, -8, 0, -1, 28, 7, 21, -28, 13, -29, 4, 2, -20, -40, -4, -21, 12, 0, -35, 8, 3, 16, 6, 13, -16, 2, 20, 17, 8, -12, 17, 16, 7, -25, 15, -9, -17, -6, -16, 10, -19, -12, 0, 5, -11, -26, -10, -15, -20, -5, 13, -4, -4, -9, -10, -4, -21, 1, 7, 18, -21, 1, 14, -19, -8, -10, 15, 0, 11, -11, -33, -6, -15, 7, -19, -15, -32, 2, -10, -12, -2, -1, 6, -2, 18, -32, 6, -11, -13, -30, -14, -52, -30, -19, -41, -11, 22, 19, -58, 2, 5, -13, 4, 4, -1, -9, 3, -5, 4, -15, -5, -15, 17, -8, 5, -2, -19, -8, -19, 4, -1, -10, -10, 20, -10, -14, 9, -7, -13, -7, 1, 1, -6, -23, -25, 11, -41, -32, -23, -3, -31, -29, -25, -30, -7, 0, 2, -1, -19, -36, 4, -14, -11, -36, 8, -20, -38, -17, -18, -28, -10, -22, -10, 4, 13, -4, 12, -18, 6, -40, 10, 0, 5, -29, -17, -32, -4, 31, -55, -3, 8, 9, 8, 9, 18, 29, 5, 14, 9, -17, -13, 16, -38, 3, 16, 3, -7, -10, 6, 6, -12, 6, -25, 16, -35, -2, -7, -25, 5, 15, 4, -2, 2, -5, -14, 21, -9, 0, 7, 4, -23, 10, 8, -4, 10, -5, -1, -4, 1, 18, -12, -20, 19, -1, -17, -4, -38, -4, -46, -5, -1, 7, -9, 0, 4, -3, 18, -11, 8, -35, -54, -31, -21, -5, -33, -15, -35, 11, -44, 1, 14, 6, -22, -10, 12, -29, 10, -44, -1, -12, -53, -16, -26, 4, 16, -7, -13, -34, 6, 0, -5, -1, 8, 3, 2, -10, 3, 7, 24, -8, 18, 0, -2, -26, -9, 26, -38, -12, -13, -2, -14, -5, -29, -7, -12, -17, 9, 2, -8, 8, -5, -8, -15, -17, 10, 3, -36, -20, -7, -11, 4, -7, -8, 3, 14, 8, 18, -11, 6, -26, 0, -11, -20, -13, 1, -41, 15, 20, -41, 3, 14, 4, 9, 4, 12, 9, 7, 21, 4, -11, 13, 12, 2, -2, 24, 6, -11, -2, -7, 6, 3, 12, 6, 11, 19, -16, -16, 4, 3, 7, 11, -4, -20, 7, 11, 13, 11, -7, 7, 12, 11, -13, -13, 6, -2, 15, 8, -4, -6, -15, -41, 7, 4, 0, -3, -12, 12, 0, -25, -12, -2, -2, -5, -7, 11, -20, -8, 5, 20, -24, -24, -25, -21, -24, -53, -11, 9, 14, -32, 7, 22, -2, -45, -11, 8, -36, -23, -50, 3, -32, -63, -13, -16, 8, 15, 5, 10, 16, -3, -7, 15, 3, 4, -22, 12, -43, -35, 10, -6, 0, 12, 6, 11, -7, -18, 11, -3, -8, -13, 12, -51, -12, -26, 8, -12, -1, -8, -5, -13, -41, 6, -7, -2, -16, -8, -27, -17, 0, -13, -9, -17, 5, -11, -4, 12, -27, 13, -5, 11, -10, -9, -5, 0, -2, -9, -27, 4, 12, -25, -6, 9, -2, -5, -6, 18, 7, -15, 10, 16, -20, -1, 8, -5, 1, 13, 2, -6, 9, -12, 1, 9, -1, -12, 12, 10, -8, -7, 2, -22, -5, 9, 1, 8, -13, 22, -8, 9, -6, -5, 4, 2, -6, -12, -6, -1, -4, -7, -10, -4, -7, -14, 0, -9, -2, -3, -4, -26, -3, -42, -3, 10, -21, -8, 1, -3, -39, -8, -10, -31, -24, -4, -25, -13, -7, -47, -11, -22, 7, -30, -8, 4, -38, -21, -6, 14, -37, -12, -30, 5, -33, -56, -28, -16, 14, -30, 1, 1, 14, -24, -15, 14, -3, -1, -37, 19, -32, -49, 15, 10, 3, 9, 2, -5, 2, -25, 11, -36, -16, -14, 3, -38, -14, -50, -14, 5, 4, 0, 5, -10, -19, 10, -5, -34, -6, 0, -7, -25, -22, -26, -24, -23, -4, -18, 2, 0, -25, 6, -9, -24, -15, -7, -14, -9, -8, -29, -1, -17, 19, 0, -1, 3, -41, -4, -6, 15, -21, 20, 11, 7, -21, -13, -6, 11, 10, -6, -1, -1, -18, 13, -9, -8, -5, 11, 7, -19, -19, -27, -2, 11, -3, 11, -4, -4, -6, 5, -19, -9, -5, 0, 24, -23, -6, 1, -8, 3, -10, -15, -6, -15, -4, -13, -19, -14, -1, -8, 8, -45, -1, -24, -11, -6, -4, -4, -4, -15, -24, -4, 8, -16, -26, -2, -18, -29, 0, -31, -14, 7, -6, -32, 3, -1, 0, -4, -10, -12, -28, -2, -19, -16, 1, -23, -16, 8, 5, -13, -2, -4, 7, 1, -3, 15, -24, -19, -30, 8, -1, -29, 4, -2, 10, 6, -2, -14, -30, -12, 22, 4, -15, -11, -35, -14, 0, -13, 0, 2, 0, -18, 2, -18, -20, -25, -2, -16, -11, -4, 15, -26, 0, -24, -9, -2, -19, -13, 0, 3, -9, 12, 10, -6, -3, -5, -4, -23, -1, -16, -15, 15, 13, -26, 0, -3, -11, -13, 14, 7, -7, -17, -3, -19, -1, -13, -16, -5, 4, -6, 6, 9, 3, -8, 4, 3, 1, -18, -13, -6, 0, -17, -4, -16, 13, 6, 3, 0, 0, 4, 4, -4, -7, 6, -9, -22, 0, -12, -13, -1, 7, -8, 
  -6, 8, 5, 26, 6, 11, 4, -5, -9, 38, 6, 18, 3, 18, 26, 21, 0, 24, 2, 17, 13, 22, 6, 32, 34, 34, 16, 29, 11, 8, 0, 46, 4, -3, -6, 0, 17, 20, -9, 9, 10, 22, 18, 7, -9, -11, 17, 19, -5, -16, 3, -8, 17, 10, -43, -14, -4, 0, 18, -17, -8, -26, -13, 6, -8, 13, -34, -3, -25, -8, -28, 18, -25, -27, -17, -31, -29, -21, 17, -33, 1, -7, -14, -12, 1, -7, -15, -2, 10, -29, -5, -10, -19, -4, -13, -7, 0, -3, -23, -12, -2, -2, -24, -18, -10, 5, -5, -22, -22, -13, 8, -24, -2, 19, -16, -2, -17, -1, -20, -5, -7, -2, -2, -10, -14, 3, 0, -23, -5, 1, -10, -2, 4, 0, 1, -16, -25, -1, -6, -2, -8, 5, 4, -13, -8, -8, -3, 5, 5, 7, -7, 2, 6, 13, -1, -7, -3, 6, 12, 12, -4, 13, 9, 36, -2, 6, 0, -4, 13, 11, 0, -7, -1, 16, 35, 15, 2, 22, 31, 4, 6, 3, 4, -9, -7, 27, -5, -3, 22, -4, 2, 33, -6, -4, 24, 3, -1, -17, -7, 0, 9, 10, -12, 4, 17, -13, 14, 25, 3, -8, 7, -19, 12, -20, -25, -7, 12, -25, -13, -1, 20, -10, -24, 3, -3, 1, -17, -23, -18, -26, -23, -26, -20, -30, -32, -35, -24, -4, 11, -34, 3, 2, -22, -19, -11, -16, -6, -29, -33, -40, -28, -20, -10, -22, -1, 1, 3, -9, -24, -12, -7, -24, -7, -4, -30, -11, -33, -21, -7, -14, 15, -20, 2, -12, -18, -19, -5, -5, -12, -3, -15, -24, -27, -13, -4, -11, -2, -19, 0, 7, -5, 21, -14, -8, -7, -8, -16, -21, -20, -21, -12, -7, 10, -19, 2, 5, -4, -19, -3, -1, -2, -5, -16, -6, -6, 9, -5, 12, 12, -11, 7, 10, 0, 18, -12, 11, 0, 36, 24, 22, 4, 20, 0, 12, 20, -5, -6, 25, -14, -1, 11, 13, -9, 4, 15, 39, 7, -8, 2, 6, 20, 31, 2, -6, -8, 8, 2, 18, 8, 17, 4, 21, 12, -17, -13, -6, 15, 22, -1, 2, 10, -12, 2, 0, -32, -12, 9, -9, 6, -17, 2, 6, 1, 10, 0, -2, -20, -20, -14, -9, -23, -10, -38, -33, -13, -45, -23, 0, 15, -40, -2, -4, -22, -34, -28, -8, -40, -26, -31, -5, -8, -21, -18, -37, -4, 1, 3, -5, -15, 2, -13, -18, -20, -22, -29, -14, -25, -31, -20, -22, -14, -19, 3, 21, -11, -8, -12, -13, -17, -22, -25, -19, 4, -17, -23, -8, 30, -21, -1, 16, -23, -12, -17, -1, -7, -6, -28, -14, 4, -16, -26, 19, 11, -9, 2, -7, -7, 6, -11, -5, 0, -7, -12, -16, -9, -21, -4, 11, 1, -1, 0, 24, 19, 36, 4, 9, 0, 13, 10, 10, 11, 31, 7, 31, 13, 16, 6, 2, 22, 14, 3, 15, 28, 10, 31, 32, 19, 25, 18, 22, 2, 24, -2, 2, 20, -1, 25, 16, 23, 10, 22, 11, 11, 3, 4, -5, 10, 0, 5, 6, -4, -12, 21, -5, -12, -24, 2, 17, 2, -5, 11, -6, 11, 8, 0, 9, -28, -24, -25, -9, -17, -7, -30, -40, -20, -31, -14, -9, -4, -49, -2, -2, -15, -14, -2, -7, -3, -11, -22, -40, -9, -4, -4, -2, -20, -11, -2, 1, -7, 12, -18, -14, -5, -11, -4, -29, -6, -5, -4, 12, -5, -33, 3, -16, 10, 2, -7, -12, 18, 6, -14, -14, -11, -1, 1, 15, -6, -16, 1, 1, 15, 3, 5, -1, -5, -6, -6, -18, 5, 9, -7, -9, 9, -8, -4, -6, -13, -11, -4, -4, -11, 2, -22, 2, -2, -8, -7, 0, -1, -24, -1, 16, 6, 34, -3, 18, -1, 14, 21, 24, 14, 13, 2, 13, 21, -1, -10, 7, -1, 8, -1, -10, 20, 42, 20, 47, 9, 35, 20, 11, 9, 14, -6, -9, 8, -8, 2, 9, -13, -17, -6, 16, -4, -49, 2, -28, 20, 17, 1, -14, 8, -21, 9, -6, -31, -43, -21, -15, -15, -56, 11, -16, -11, 8, -8, -4, -24, -42, -24, -21, -19, -33, -31, -51, -21, -46, -17, -11, -6, -40, 4, 1, -9, -18, -18, -13, -22, 4, -13, -27, -14, -38, -8, -9, -14, -10, -5, 7, -9, 3, -8, -8, -12, -10, -9, -23, -7, -14, -12, 0, 14, -30, 10, 6, -14, 13, -11, -8, -26, 17, -14, -24, -10, -13, 1, -6, 15, -20, 1, 22, -11, 8, -14, 7, 16, 15, 1, -16, 24, 8, 16, 2, -7, -14, -2, 5, -11, 8, 22, -1, 10, 19, 7, -26, 12, 16, -7, 19, 3, -9, 1, 25, 11, 28, 0, 2, 0, -2, 32, 11, 13, 9, 4, 30, 29, 25, -1, 12, 31, 17, 5, -11, 8, 35, 5, 10, -3, 21, 8, 5, 0, 23, 4, 0, 16, -18, 24, -5, -19, -37, -19, 4, -16, -22, -9, -20, 3, 24, 9, 13, -5, -8, -7, -19, -37, -32, -18, -27, -20, -49, -4, -10, -4, 1, 1, -2, -14, -25, -37, -19, -29, -30, -38, -31, -30, -36, -20, -2, 12, -53, 0, -11, -14, -35, -20, -18, -10, -14, -41, -16, -24, -26, -18, -2, -18, -9, 7, -4, -15, -4, -3, -22, -5, 8, -19, -34, -18, -33, -22, 10, -1, -10, 4, 17, 10, -30, 1, 7, -19, 5, -11, -24, -26, -12, -13, -11, -5, -6, 5, 3, 13, -11, -9, 8, 4, -5, -12, 0, -10, -20, 24, -14, 17, -22, 3, 2, 19, 1, 9, 11, 11, 5, 12, 1, 8, 4, 12, -4, 2, 5, 0, 19, 6, 31, -1, 6, 3, 30, 43, 17, 9, 42, 12, 34, 27, -1, 1, -12, 26, 7, 20, 28, 4, 34, 45, 39, 4, 18, -9, -5, -4, 34, 1, -41, 8, -26, 23, 7, -14, -38, 8, 21, 9, -27, -15, -6, -35, 21, 0, -1, -1, -4, 0, -8, -30, -23, -23, -20, 4, -26, -25, -17, -4, -20, -1, -4, -20, -29, -45, -16, -26, -38, -42, -31, -21, -41, -28, -26, 11, -50, 2, 2, -21, -17, -19, -20, -22, -18, -28, -26, -15, -40, -19, -14, -12, -13, -9, -2, -15, -4, -9, -20, -14, -16, -34, -16, -16, -17, -14, 14, 18, -39, -2, 9, -13, 4, 0, -12, -8, 1, -7, 13, -14, -17, -3, 12, 1, -3, 6, 11, -6, -9, -4, 19, 9, -10, -32, 13, 8, -4, 5, 9, 12, -11, -1, 17, 17, 10, 4, 21, 28, 7, -4, 10, 18, -2, 12, 6, 2, 27, 2, 20, 13, 47, 7, 9, 18, 26, 24, 2, 10, 43, 33, 37, 34, -1, -2, 7, 25, 5, 23, 14, 6, 51, 40, 55, 7, 8, 11, -5, -10, 48, 7, -40, 8, -31, 17, -22, -8, -25, 7, -11, 5, -20, -11, -26, -47, 13, 7, 3, 1, -18, 2, -12, -22, -34, -11, -25, -8, -27, 1, -6, 0, -24, 2, 2, -24, -20, -35, -17, -31, -26, -53, -44, -26, -42, -19, -21, 4, -67, 3, -2, -15, -30, -13, -33, -20, -10, -29, -14, -21, -31, -18, -20, -18, -23, -4, 0, -20, 12, -2, -8, -13, -17, -21, -3, -21, -23, -7, 4, 22, -42, 2, 4, 11, -8, 14, -22, -4, 0, -13, -2, -14, -6, 0, -15, 0, 2, -1, 0, 22, -4, -6, 1, -10, -11, -32, 8, -19, -33, 8, 0, 19, -26, 3, 11, 11, -7, -18, 14, -3, 18, -22, 13, 1, -18, 4, -1, -1, -1, 1, 38, 12, 37, -2, 23, 4, 16, 5, 36, 10, 30, 7, 48, 34, -10, -1, 10, 6, 27, 6, 12, 35, 40, 57, 31, 8, 21, 16, 3, -33, 56, -2, -55, -12, -30, 33, -25, -24, -20, 15, -2, -10, -18, -19, -14, -38, 29, -5, 11, 4, -29, 12, -29, -25, -41, -22, -31, -18, -36, -18, -28, -5, -16, 7, 7, -27, -24, -42, -21, -22, -39, -42, -64, -13, -59, -31, -12, 6, -64, 3, -6, -17, -24, -11, -13, -18, -27, -33, -21, -15, -20, -14, -16, -5, -31, 5, 14, -16, -8, -17, -15, -28, -14, -40, -13, -16, -21, 0, -8, 6, -36, -2, 8, -7, -16, -3, -12, -24, -12, -2, -16, -17, -19, -17, -24, -7, 5, 2, 4, -25, -28, -24, -9, -13, 10, -30, -17, -21, -44, -24, -19, 4, -17, 5, 24, -6, 6, -14, -5, 1, 7, -10, 6, -25, -11, -2, -2, 12, -28, -3, 31, 3, 58, -12, 20, -4, 45, 33, 20, 11, 33, 27, 62, 45, 14, -3, 29, 9, 29, 32, 22, 30, 63, 41, 15, 24, 26, 36, 11, -7, 55, 0, -51, 0, 8, 13, -21, 1, 6, 14, -5, 10, -3, 5, -11, -37, 22, 2, 2, 19, -40, 14, -24, -30, -50, -13, -30, 8, -30, -6, -36, -1, -4, 1, 9, -19, -26, -50, -18, -32, -35, -58, -41, -21, -40, -21, -32, -2, -56, -6, -24, -16, -22, -27, -16, -10, -51, -24, -12, -15, -42, -10, -46, -3, -29, 7, 22, -3, -8, -30, -7, -16, -32, -59, -1, -16, -25, 0, -38, -2, -47, 5, 0, -7, -13, -13, -6, 5, -11, -7, -35, -3, -14, 3, -13, -14, -1, -2, 23, -5, -32, -14, -5, -7, -29, -32, -24, -1, -32, -11, -12, 21, -7, 7, -2, -7, 26, -15, -5, 23, 29, 7, -20, 11, 2, 13, 3, 30, 4, -1, 60, 20, 59, -22, 9, 28, 69, 55, 20, 3, 62, 19, 72, 50, 8, -17, 4, 19, 12, 26, 16, 40, 49, 24, 51, 23, 31, 25, 9, 7, 50, 6, -53, 39, -3, 9, -12, 16, -2, 6, 5, 6, 5, 17, -18, -23, 15, 7, 28, 30, -64, 14, -23, -48, -69, -8, 1, 5, -31, 3, -57, 27, 12, -2, -9, -20, -45, -80, -14, -26, -46, -95, -55, -27, -63, -35, -49, -3, -72, 1, -12, -19, -54, -37, -4, -20, -68, -56, -26, -30, -72, -14, -67, 2, -36, 8, 30, -34, -13, -75, 1, -30, -41, -69, -26, -46, -54, -25, -34, 17, -45, -4, 17, -9, -26, -33, 2, 8, -11, -32, 6, -38, -36, -4, -19, 12, -27, 2, 15, 1, -23, -23, -12, -17, -59, -34, -37, -6, -42, -1, -22, 32, -26, 0, 19, 12, -5, -18, -7, 11, -2, -14, -3, -24, -21, 11, 15, 25, 2, 1, 61, 32, 81, -21, 17, 1, 60, 36, 32, 0, 68, 7, 84, 37, 7, -10, -6, 21, 16, 23, 1, 66, 43, 16, 50, 52, 42, 42, 1, -21, 59, 2, -38, 29, -11, 12, 10, 34, 8, 14, 10, 41, -7, 33, -20, -19, 8, 4, 19, 23, -37, 14, -17, -51, -56, -1, 4, 21, -21, 18, -41, 7, 22, -4, -10, -15, -46, -74, -10, -13, -56, -88, -59, -13, -50, -7, -44, -24, -106, 8, -51, -29, -82, -17, -13, -23, -83, -62, -25, -16, -54, -30, -103, -52, -40, 6, 29, -32, -10, -66, -28, -22, -39, -80, -33, -19, -85, -15, -27, 33, -112, 6, 11, -26, -17, -22, 0, -14, -34, -27, 0, -19, -43, 0, -19, 16, -27, -5, 15, -18, -4, -20, -15, -26, -19, -33, -20, 1, -47, -20, -5, 29, -26, -6, 35, -8, 17, -23, 18, -8, -13, -30, -3, 0, -10, 6, 8, 26, -11, 3, 56, -20, 86, -18, 13, 9, 29, 12, 28, 22, 72, 15, 102, 46, -34, -20, -3, 36, 25, 12, -4, 45, 43, 31, 29, 41, 46, 39, 21, -43, 66, -17, -54, 31, 4, 17, 24, 47, -8, 14, 10, 6, 12, 21, -7, -29, 13, 8, -31, 28, -38, 21, -12, -57, -78, 16, -26, -12, 2, 4, -38, -22, 16, -6, -23, -8, -42, -71, -8, -1, -48, -93, -71, -11, -57, -18, -22, -12, -104, 9, -58, -13, -95, -7, -6, -3, -49, -63, -53, -34, -78, -3, -72, -82, -47, 6, 7, -31, 10, -63, -34, -1, -63, -81, -50, -15, -51, -36, 33, 8, -105, 2, -7, -34, 11, -23, -31, -3, -18, -15, -26, 4, -4, 1, 21, -17, -32, -8, 9, -8, 18, -19, -8, 2, -21, -33, -52, 2, -20, -14, 10, 12, -41, 6, 8, -1, 27, -12, 2, 2, 13, -5, -11, 3, 12, 10, 29, 18, -9, 5, 58, 13, 94, -13, 25, 10, 15, 2, 28, 9, 62, 5, 81, 70, -13, -20, -4, 55, 13, -2, 42, 29, 73, 33, 26, 28, 38, 34, -7, -14, 71, -13, -47, 39, -7, 7, 17, 46, -39, 13, 20, -3, -6, 15, -39, 3, 22, 7, -52, 34, -41, 27, -18, -41, -68, 9, -28, -22, -29, 19, -36, -50, 21, -7, -20, -11, -35, -74, -24, -20, -37, -84, -63, -13, -50, -36, -21, -34, -92, 3, -44, -29, -83, 2, -22, -19, -53, -43, -69, -19, -52, -5, -56, -83, -44, -2, -9, -29, 11, -51, -24, -17, -64, -75, -33, -19, -46, -25, 16, 10, -83, -1, 1, -2, 8, -19, -12, -12, -6, -15, -18, -11, -7, 1, 31, 8, -26, -1, -4, 11, 1, -8, -11, 5, -2, -2, -25, -11, -6, 2, -3, 1, -19, -3, 17, 14, 33, -2, 17, 5, 11, 0, -9, -11, 4, 2, 9, 15, 7, 0, 28, 10, 67, -14, 11, 9, 1, 3, 44, 10, 23, 6, 64, 84, -12, -12, 16, 34, 11, -25, 35, 44, 63, 25, 54, 17, 54, 28, 2, 9, 95, -1, -28, 24, -9, 22, 14, 14, -27, 10, 30, -8, -5, 23, -50, 10, 37, 1, -48, -12, 6, 8, -37, -33, -44, 11, -44, -29, -35, 15, -16, -55, 7, -5, -16, -17, -44, -68, -26, -16, -27, -83, -59, -24, -41, -15, -17, -28, -75, -3, -42, -31, -58, -15, -28, -14, -27, -32, -67, -11, -45, -16, -40, -73, -39, 1, -10, -45, -3, -26, -41, -10, -53, -52, -36, -19, -47, -34, 14, -16, -92, 5, 2, -28, 3, -36, -16, -6, -22, -16, -11, -8, -33, -16, 12, -16, -25, -3, 8, -20, 7, -10, -4, -14, -17, -18, -18, -1, -32, -9, 12, 2, -21, 3, -6, -5, -2, -19, 6, -6, 8, -3, 9, 2, -6, -4, 18, 15, 18, 0, 33, 15, 52, -13, 14, 18, 3, 17, 18, 10, 35, 13, 33, 77, 3, -3, 22, 26, 14, -11, 17, 28, 64, 38, 44, 24, 38, 21, 10, -11, 83, -2, -18, 41, -18, 33, -8, 21, -13, 13, 9, 1, -13, 32, -29, -3, 22, 7, -38, 4, -22, 18, -21, -30, -44, 4, -59, -12, -58, 18, -32, -48, -18, -8, -20, -11, -37, -46, -20, -23, -27, -80, -42, -4, -44, -9, -20, -20, -72, 2, -40, -25, -43, -20, -13, 0, -21, -36, -59, -5, -19, -9, -19, -61, -40, 2, -21, -33, 16, -10, -32, 0, 2, -32, -64, -16, -18, -24, 15, -25, -65, -3, -9, -22, -1, -9, -27, -10, -13, -19, -16, 3, -3, -24, 12, 0, -38, 2, -6, -15, 2, -15, -5, 2, 4, -22, -37, -7, -42, -6, -4, -7, -31, 6, 9, 4, 14, 1, 1, 9, 0, 0, -1, 9, 16, 5, 2, 12, 6, -7, 11, 9, 53, -2, 7, 7, 21, -4, 16, 23, 21, 3, 38, 70, 8, 0, 44, 33, 5, 2, 19, 26, 61, 15, 49, 6, 34, 28, 21, 6, 55, -1, -14, 28, -31, 32, 4, 29, -23, 13, 14, 2, -19, 33, -14, -8, 42, 2, -13, 12, -13, 13, -25, -11, -42, -5, -64, 0, -38, 22, 2, -27, -24, 5, -2, -28, -24, -33, -12, -14, -40, -56, -26, -30, -49, -26, -21, -9, -57, 2, -15, -9, -17, -13, -17, -5, -29, -36, -35, -15, -55, -13, -17, -37, -26, 3, -9, -6, 0, -5, -15, -8, 0, -25, -43, -7, -12, -10, 12, -11, -42, 1, -12, -8, -9, 6, -17, -12, -12, 1, -25, -13, -27, 0, 1, -22, -32, -8, 15, -3, 19, -7, -11, 3, -5, -13, -14, -5, 5, -22, 1, -2, -31, -3, 7, 7, 7, 2, 4, -5, -5, -8, 9, -16, 13, 0, 14, 10, 19, -1, 26, 12, 37, 2, 0, 6, 16, 5, 14, -2, 14, 2, 47, 50, -2, 3, 38, 38, 30, 19, 14, 22, 28, 47, 53, 13, 48, 18, 14, 17, 52, 8, -39, 9, -56, 32, -1, 11, -57, 5, 16, 8, -1, 18, -28, -11, 38, 1, -8, 4, -10, 8, -14, -12, -34, -7, -30, 5, -27, 12, -4, -9, -42, 1, 4, -35, -16, -11, -11, -16, -19, -41, -36, -28, -53, -20, 11, -20, -65, -3, -3, -5, -18, -17, -8, -20, 9, -52, -27, -20, -39, -16, -16, -17, -24, 2, 7, -21, 1, 3, -6, -12, 6, -32, -13, -15, -33, -5, 8, -13, -39, 2, 4, -23, -20, -15, -7, -20, -4, -29, -7, -27, -41, -17, -22, -4, -23, -9, 20, -18, 1, -19, -6, -11, -11, -23, -9, -28, -19, -13, 12, 10, -22, 3, 0, 2, 4, -10, 8, -5, -19, -10, 14, -7, -5, 1, 4, 2, 9, -2, 13, 12, 33, -4, 7, 8, 9, 3, 12, 1, 14, 5, 22, 42, -12, -3, 16, 25, 6, 4, 39, 16, 26, 46, 57, 15, 43, 18, 19, 12, 46, -3, -35, 27, -38, 26, 12, 6, -35, 4, 11, 13, 18, 10, -3, -13, 28, 2, -15, 7, -5, 6, -4, -24, -30, -6, -39, 14, -12, 8, 1, -25, -34, 2, 5, -4, -22, -20, -16, -10, -33, -42, -31, -20, -52, -24, 7, -3, -57, 7, 8, -14, -8, -6, -10, -19, 0, -23, -34, -13, -28, -23, 12, -16, -7, -6, -2, -11, -26, -4, -24, -14, -17, -20, -17, -13, -49, -33, -4, -8, -37, 2, -22, -30, -38, -9, -9, -34, -29, -23, -8, -17, -42, -31, -18, -12, -22, 8, 6, -26, -16, -20, -6, -21, -4, -27, -14, -21, -28, -16, -10, 15, -24, -4, 24, -20, 6, -11, -2, -11, 9, -5, 7, -16, -21, -20, 0, 28, 6, 2, 22, 1, 14, 9, 7, -8, -9, 4, 22, -2, 0, -20, 15, 37, 8, 4, 10, 17, 31, 5, 24, 12, 39, 44, 39, 32, 33, 14, 10, 20, 31, 0, -28, 6, -12, 32, 2, 2, -7, 15, 0, -4, 7, 12, -27, -25, 31, -2, 7, 6, 4, 11, -25, -8, -7, -19, -38, -34, -9, -4, -7, -11, -27, 6, -12, -24, 3, -20, -20, -8, -23, -31, -38, -3, -57, -13, -9, -12, -56, 1, -9, -29, -28, 5, -13, -20, -18, -20, -33, -17, -26, -4, -11, 2, -3, 3, -11, -32, -27, -17, -26, -33, -19, -21, -17, -22, -25, -13, -22, -17, -27, -2, -13, -33, -25, -7, -29, -10, -19, -36, -35, -19, -26, -20, -25, -20, -35, 7, 13, -13, -5, -11, -15, -13, -4, -40, -14, -13, -24, -9, 6, -4, -34, 0, 11, -8, 2, -5, -16, 1, -6, -9, -11, 0, -12, -21, 16, 1, -6, -6, -14, 2, 33, 0, 6, 1, 1, 13, 2, 0, 10, 12, 13, 24, -3, 0, 7, 23, 28, 7, 16, 20, 36, 46, 33, 14, 40, 7, -4, -2, 25, -4, -32, 34, -10, 6, -9, 4, 1, -4, -16, -3, -7, -4, -25, -16, 20, 2, 15, 10, -10, 12, -32, -20, 2, -11, -38, -27, -34, 3, 17, -12, -37, 2, -3, -13, -4, -10, -26, -51, -13, -39, -26, -21, -32, -17, -16, -7, -51, 0, -13, -16, -38, -18, -7, -34, -14, -18, -33, -6, -22, -27, -21, -15, -5, -2, -14, -27, -25, -25, -30, -20, -21, -36, -27, -11, -28, -22, -9, -25, -33, 4, -3, -32, -24, -25, -22, -34, -7, -30, -30, -17, -22, -22, 0, -5, -26, 4, 6, -24, -5, -17, -11, -3, 14, -37, -37, 0, -26, -17, 11, -11, -38, 3, -5, 1, 10, -19, -9, -1, 7, 11, 0, -6, -19, -2, -2, 4, -1, -3, 10, -8, 19, 8, 2, 0, 7, -5, 20, 6, 36, 7, 26, 26, -3, 1, 16, 27, 11, 5, 16, 25, 57, 30, 38, 5, 53, 13, 48, -5, 20, -2, -18, 2, -10, 30, -15, 8, 0, 28, 1, 10, 15, 6, -3, -18, 21, -5, -6, -8, -7, 15, -18, -31, -26, -12, -33, 9, -24, -4, -27, -8, -13, 4, -8, -21, -30, -25, -22, -10, -9, -40, -34, -6, -23, -3, 10, 13, -45, -5, -3, -14, -29, -5, -25, -9, -14, -28, -42, -13, -25, -4, -16, -20, -5, -5, -13, -19, -7, -10, -22, -6, -17, -22, -45, -17, -17, -24, -11, -11, -34, 2, -5, -16, -19, -10, -26, -25, -25, -25, -37, -21, -17, -22, -4, 0, -39, 2, 15, -6, 8, -22, -8, -6, -14, -28, -30, -12, -11, -12, 4, 3, -25, 1, 17, -1, -5, 5, -6, -7, -6, -3, -17, -8, 2, -4, 6, -4, 6, -2, 5, 11, 24, -7, 0, -1, 1, 28, -1, -1, 22, 11, 17, 25, 9, -2, 14, 17, 16, 5, 0, 24, 41, 36, 38, 16, 53, 5, 22, 2, 28, 0, -20, 12, 6, 29, 6, 25, 4, 35, 4, 9, 31, 21, -3, -5, 32, -8, -8, 9, -2, 18, -17, -5, -10, 20, -27, 25, 3, -7, 7, 7, -8, 3, -9, -9, -7, -12, -11, -12, -12, -24, -41, -15, -38, -7, -4, -10, -24, 2, 3, -35, -20, 6, -17, -7, 1, -8, -24, 0, -10, -7, -8, -19, -13, 1, -9, -16, -1, 9, -22, -6, -4, -8, -26, -3, -25, -10, 5, -11, -23, 5, 3, -28, -6, -4, -25, -14, 10, 0, -15, 13, -6, -14, 6, -6, -25, 0, -7, -9, -8, -17, -3, -2, 2, -32, -21, -6, -18, -7, 11, -17, -31, -2, 7, -9, -20, 0, -6, -5, 0, -5, -1, -6, 6, -5, 5, 17, 16, 2, 15, 2, 30, -8, 5, -4, 37, 15, 22, 3, 33, 4, 22, 48, 3, -2, 27, 31, 36, 11, 25, 20, 38, 47, 46, 8, 37, 10, 43, 3, 45, 5, -11, 27, 18, 15, -10, 31, 17, 29, 3, 17, 18, 27, 15, -10, 52, -1, -14, 1, -9, 20, -26, 3, 13, 14, -13, 12, -8, -10, -15, -2, 2, -1, 8, -9, 4, -20, -21, -19, -11, -21, -30, -14, -36, -17, -3, 4, -50, -2, -9, -15, -21, -11, -16, -6, -8, -27, -35, -14, -26, -8, -8, -19, -9, 2, 2, -12, 24, 7, -21, -8, -5, -12, -30, -3, -23, 0, 12, -13, -32, 3, -12, -28, -31, 8, -22, -22, -11, -18, -21, -28, -18, -18, -11, -4, -27, -4, 7, -20, -7, -12, -6, -5, -25, -20, -18, -16, -34, -4, 11, 9, -26, 2, 15, -4, -7, 9, -10, -6, -9, -12, -12, -6, -5, -6, 0, 20, 23, 7, 18, 5, 20, 4, 17, -1, 3, 2, 6, 0, 23, 12, 26, 26, 12, 1, 20, 22, 13, -8, 21, 25, 2, 19, 36, -1, 23, 12, 12, 30, 56, 0, 17, 7, -23, 15, 15, 19, -4, 41, 11, 0, 31, 16, 0, -9, 38, 2, 5, 0, -21, 9, -21, -21, 21, 15, -5, 0, 13, 10, -1, -8, 12, 1, 4, -18, 8, -26, -21, -7, 11, 26, -27, 0, -8, -13, -2, -9, -27, 0, -3, -4, 28, 11, -8, -13, 4, -18, -18, 0, -24, -10, -19, -19, -1, 3, -8, -4, -6, -15, -9, -8, 7, -20, -18, 0, -19, -7, -12, -18, -8, -5, -5, -20, 2, -16, -5, -13, -7, 1, -35, 1, -11, -27, 2, -25, -20, -6, -7, -18, 18, 3, -10, 0, 3, -3, -38, 0, -17, -7, 13, 0, -35, -4, 11, 0, 2, 8, -2, -3, 8, 15, 7, 0, -8, -10, -1, -2, 10, 
};
const TfArray<2, int> tensor_dimension4 = { 2, { 5,4000 } };
const TfArray<1, float> quant4_scale = { 1, { 0.03719208762049675, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data5[16] = { 9929, 562, -3100, 180, 856, -2902, -8218, 95, 110, -16, -7222, -601, -4831, 418, 432, 127, };
const TfArray<1, int> tensor_dimension5 = { 1, { 16 } };
const TfArray<16, float> quant5_scale = { 16, { 8.9548284449847415e-06, 1.1796730177593417e-05, 1.499773861723952e-05, 1.4230892702471465e-05, 1.0140786798729096e-05, 1.3077414223516826e-05, 9.6364146884297952e-06, 1.3493993719748687e-05, 1.3324201972864103e-05, 1.170687119156355e-05, 7.5672123784897849e-06, 1.3395427231444046e-05, 1.4770482266612817e-05, 1.0194395144935697e-05, 1.04968039522646e-05, 1.0908655895036645e-05, } };
const TfArray<16, int> quant5_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data6[16*3*3*8] = { 
  /* [0][0][][] */ -92,-7,1,54,67,13,7,-29, -117,-53,-16,-8,-5,-39,-88,-50, -12,-79,-26,-37,-46,-49,34,-15, 
  /* [0][1][][] */ -78,-24,-8,20,-11,23,-4,-23, -85,-49,-14,-3,-6,-33,-23,-45, -18,-64,-20,-30,-27,-48,10,-13, 
  /* [0][2][][] */ -94,-100,-53,28,-9,18,2,-8, -87,-127,-53,-1,-14,-22,-18,-24, -20,-110,-56,-20,-37,-36,29,-8, 
  /* [1][0][][] */ 24,-74,-68,-21,-98,-10,9,20, 13,-27,-81,-38,-57,-2,8,41, -9,8,0,-19,16,-11,11,-36, 
  /* [1][1][][] */ 17,-31,-17,-22,-61,-15,-5,18, 9,-50,-117,-29,-127,4,6,10, -3,-4,-32,-1,1,10,7,-3, 
  /* [1][2][][] */ 22,-28,-13,-6,-34,-8,-13,16, 17,-36,-67,-7,-81,7,8,18, 9,-16,-64,11,-9,25,52,12, 
  /* [2][0][][] */ 9,5,8,-124,-5,-126,-1,-76, 14,7,9,-126,-6,-126,7,-88, 5,3,7,-64,0,-69,9,-68, 
  /* [2][1][][] */ 19,9,5,-8,-2,-7,12,-2, 9,4,8,14,2,7,9,3, -23,-15,-8,17,5,25,3,2, 
  /* [2][2][][] */ -20,-5,-25,24,-16,21,-5,16, -73,-127,-108,14,-11,23,-16,10, -96,-127,-111,29,-13,16,-25,14, 
  /* [3][0][][] */ 1,-6,1,-22,-6,-34,-19,-24, 15,6,1,-36,-41,-73,2,-42, 51,4,3,-127,-20,-59,25,-23, 
  /* [3][1][][] */ 21,-2,-1,-52,-13,-66,3,-38, -15,9,-1,-120,-52,-94,10,-44, 6,3,-6,-25,-4,10,14,-23, 
  /* [3][2][][] */ 17,-7,-10,-63,-24,-57,28,-21, 102,-5,-13,-46,-28,-11,5,-14, -38,-20,-19,35,-1,36,3,-8, 
  /* [4][0][][] */ -7,80,19,-48,5,-65,-42,-42, -44,-9,14,-30,-8,-55,-65,-30, -34,-37,-2,-21,-13,-44,-32,-25, 
  /* [4][1][][] */ -2,-8,92,2,11,8,0,-25, -77,2,4,-9,6,-51,-119,-51, -55,-40,0,-8,-1,-44,-86,-25, 
  /* [4][2][][] */ -2,71,-27,4,18,40,46,11, -75,-5,41,16,18,-17,-127,-42, -48,-25,1,-6,-2,-48,-113,-33, 
  /* [5][0][][] */ -1,-38,-64,4,-11,-4,40,16, -12,-25,-59,-12,-8,61,17,-1, -35,-26,-23,3,10,18,19,8, 
  /* [5][1][][] */ -18,-65,-77,12,-26,39,7,15, -29,-96,-127,33,-37,-58,5,24, -51,-57,-50,25,-1,49,-1,13, 
  /* [5][2][][] */ -34,-60,-33,14,-27,16,-33,11, -38,-78,-40,14,-51,36,-27,7, -41,-79,-44,9,-12,32,-26,14, 
  /* [6][0][][] */ -3,-5,6,-1,-4,15,-6,-7, -8,98,-8,-3,-3,3,-14,-15, -8,-11,-10,-22,-4,-32,-22,-21, 
  /* [6][1][][] */ 4,-5,12,-3,-10,17,5,1, 6,-32,13,-12,0,-11,1,-10, -9,-25,86,0,-1,1,-6,-18, 
  /* [6][2][][] */ -7,-19,-10,-2,-12,8,4,5, -10,127,-23,4,-6,18,7,10, -11,-9,-13,2,2,8,7,0, 
  /* [7][0][][] */ 8,-2,1,-18,-10,-10,0,3, 4,-3,0,-14,0,-1,-16,0, -1,-6,0,-6,-2,4,-11,-5, 
  /* [7][1][][] */ 7,-3,-1,-14,-12,-9,-9,3, -1,-1,0,-9,-1,-3,127,-2, 0,-2,1,-6,-5,-3,-21,-6, 
  /* [7][2][][] */ 7,-2,-2,-5,-13,-6,-2,3, 5,0,-2,-2,-1,-6,-21,-3, -1,0,1,-5,16,-8,-14,-4, 
  /* [8][0][][] */ 2,20,21,-48,30,-74,1,-109, -10,16,23,-70,12,-111,-22,-66, -5,0,6,-68,-11,-69,-12,-29, 
  /* [8][1][][] */ 4,5,-3,-57,11,-15,21,-29, -15,9,12,-67,18,-89,-10,-118, -11,2,7,-71,-13,-89,-6,-61, 
  /* [8][2][][] */ 0,-21,-29,-40,-7,0,54,8, -19,1,29,-37,5,-25,-13,-50, -16,1,2,-59,76,-90,3,-127, 
  /* [9][0][][] */ 16,-2,-33,-22,-16,-14,38,7, -12,-25,-45,-11,-1,32,32,-4, -124,-52,-46,108,10,-20,-9,-15, 
  /* [9][1][][] */ -17,-3,-44,10,-7,2,17,6, -87,-100,-79,30,-2,65,-5,17, -94,-125,-107,-23,-9,21,-25,9, 
  /* [9][2][][] */ -56,-47,-37,20,6,28,-25,1, -98,-127,-68,34,-9,23,-51,2, -46,-92,-83,10,-29,-15,-35,-6, 
  /* [10][0][][] */ -21,-97,-57,-54,-67,-74,-127,-21, -17,-49,-38,-61,-51,-80,-95,-29, -11,-54,-21,-66,-43,-85,-78,-28, 
  /* [10][1][][] */ 4,16,-5,-43,-54,-57,-84,-20, 2,1,-6,-38,-41,-42,-63,-17, -3,-23,-6,-49,-35,-59,-60,-22, 
  /* [10][2][][] */ 45,84,35,-67,-6,22,60,-18, 42,-42,57,-32,10,35,43,-42, 30,100,31,-82,20,-40,17,-81, 
  /* [11][0][][] */ 5,21,11,-32,-5,-69,-26,-36, 2,15,18,-33,-6,-85,-48,-51, 6,15,14,-52,-9,-85,-24,-24, 
  /* [11][1][][] */ 10,12,11,-122,-3,-83,13,-48, 11,12,20,-127,-1,-110,-30,-114, 9,17,5,-72,5,-108,-1,-114, 
  /* [11][2][][] */ 20,-2,-2,-66,-5,-31,-8,-15, -9,5,-8,-58,1,-32,121,-35, 1,2,25,-23,7,-35,-2,-62, 
  /* [12][0][][] */ -1,7,1,-13,25,43,10,2, -15,11,25,-55,27,-106,-14,-127, -19,0,7,-95,1,-110,-22,-85, 
  /* [12][1][][] */ -13,-45,-70,2,-40,29,11,43, -8,16,8,-10,12,16,9,1, -17,27,33,-42,12,-68,-6,-96, 
  /* [12][2][][] */ -38,-122,-109,1,-44,7,-4,17, -9,-60,-127,-1,-36,27,15,29, -17,51,26,1,4,-2,15,-12, 
  /* [13][0][][] */ -10,-22,-5,-23,-91,-56,-91,-20, -8,-15,0,-26,-93,-69,-37,-39, -7,116,-1,-54,-34,-100,-22,-46, 
  /* [13][1][][] */ 8,-13,-2,-33,-111,-67,-43,-15, 10,8,2,-51,-127,-48,3,-23, 43,-32,51,-53,-15,-43,11,-25, 
  /* [13][2][][] */ 14,-13,-3,-84,-90,-85,-5,-15, 11,3,-1,-48,-93,-17,42,-5, 15,80,16,1,-4,33,39,0, 
  /* [14][0][][] */ -24,-55,-30,-6,-84,-7,-20,7, 4,-15,-32,-9,-102,12,46,6, -3,35,16,6,0,-2,19,96, 
  /* [14][1][][] */ -40,-73,-18,-7,-84,-14,-52,4, -16,-69,-62,-8,-127,3,10,5, -37,-40,-58,13,-29,74,10,-33, 
  /* [14][2][][] */ -38,-56,-15,-13,-60,-23,-97,0, -30,-52,-26,-17,-81,-11,-33,-8, -51,-97,-42,-4,-66,-3,-25,87, 
  /* [15][0][][] */ 18,2,-8,-20,-9,0,38,-6, -40,-1,6,38,25,3,-23,-17, -29,-20,-1,5,20,-7,-24,-9, 
  /* [15][1][][] */ 6,6,-14,-3,4,11,10,0, -127,-7,0,12,11,9,-36,-15, -26,-19,0,8,8,-11,-26,-10, 
  /* [15][2][][] */ -14,1,-14,7,21,21,29,1, -63,-6,-2,24,21,6,-34,-12, -13,-9,1,3,5,-14,-19,-9, 
};
const TfArray<4, int> tensor_dimension6 = { 4, { 16,3,3,8 } };
const TfArray<16, float> quant6_scale = { 16, { 0.0046577281318604946, 0.0061359037645161152, 0.0078008631244301796, 0.0074019990861415863, 0.0052745877765119076, 0.0068020336329936981, 0.00501224584877491, 0.0070187114179134369, 0.0069303964264690876, 0.0060891648754477501, 0.003935979213565588, 0.0069674435071647167, 0.0076826591975986958, 0.005302471574395895, 0.0054597649723291397, 0.0056739840656518936, } };
const TfArray<16, int> quant6_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data7[8] = { -5337, -8732, -1986, -3637, -8593, -7892, -35932, -4183, };
const TfArray<1, int> tensor_dimension7 = { 1, { 8 } };
const TfArray<8, float> quant7_scale = { 8, { 1.4159894817566965e-05, 1.6422192857135087e-05, 1.7500866306363605e-05, 1.8044052922050469e-05, 1.2553169653983787e-05, 1.714767495286651e-05, 7.4165695878036786e-06, 1.773784970282577e-05, } };
const TfArray<8, int> quant7_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data8[8*3*3*1] = { 
  /* [0][0][][] */ -58, -41, -16, 
  /* [0][1][][] */ -30, -15, 37, 
  /* [0][2][][] */ -17, 29, 127, 
  /* [1][0][][] */ -42, -64, -51, 
  /* [1][1][][] */ 15, -17, -15, 
  /* [1][2][][] */ 43, 127, 42, 
  /* [2][0][][] */ -50, -43, -41, 
  /* [2][1][][] */ -4, -8, -12, 
  /* [2][2][][] */ 127, 18, 12, 
  /* [3][0][][] */ 127, 29, 12, 
  /* [3][1][][] */ 3, -14, -17, 
  /* [3][2][][] */ -39, -46, -51, 
  /* [4][0][][] */ 46, -31, -61, 
  /* [4][1][][] */ 89, -30, -57, 
  /* [4][2][][] */ 127, 9, -54, 
  /* [5][0][][] */ 20, 127, 20, 
  /* [5][1][][] */ 4, 1, -2, 
  /* [5][2][][] */ -35, -58, -42, 
  /* [6][0][][] */ -23, -9, 64, 
  /* [6][1][][] */ -13, -18, 107, 
  /* [6][2][][] */ -8, -7, 127, 
  /* [7][0][][] */ 11, 41, 127, 
  /* [7][1][][] */ -17, -14, 8, 
  /* [7][2][][] */ -51, -51, -45, 
};
const TfArray<4, int> tensor_dimension8 = { 4, { 8,3,3,1 } };
const TfArray<8, float> quant8_scale = { 8, { 0.0058503663167357445, 0.0067850677296519279, 0.0072307377122342587, 0.0074551631696522236, 0.0051865247078239918, 0.0070848115719854832, 0.0030642636120319366, 0.0073286504484713078, } };
const TfArray<8, int> quant8_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<4, int> tensor_dimension9 = { 4, { 1,99,40,1 } };
const TfArray<1, float> quant9_scale = { 1, { 0.0024203432258218527, } };
const TfArray<1, int> quant9_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<4, int> tensor_dimension10 = { 4, { 1,99,40,8 } };
const TfArray<1, float> quant10_scale = { 1, { 0.0019225742435082793, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfArray<4, int> tensor_dimension11 = { 4, { 1,50,20,8 } };
const TfArray<1, float> quant11_scale = { 1, { 0.0019225742435082793, } };
const TfArray<1, int> quant11_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const TfArray<4, int> tensor_dimension12 = { 4, { 1,50,20,16 } };
const TfArray<1, float> quant12_scale = { 1, { 0.0023116022348403931, } };
const TfArray<1, int> quant12_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const TfArray<4, int> tensor_dimension13 = { 4, { 1,25,10,16 } };
const TfArray<1, float> quant13_scale = { 1, { 0.0023116022348403931, } };
const TfArray<1, int> quant13_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<2, int> tensor_dimension14 = { 2, { 1,4000 } };
const TfArray<1, float> quant14_scale = { 1, { 0.0023116022348403931, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfArray<2, int> tensor_dimension15 = { 2, { 1,5 } };
const TfArray<1, float> quant15_scale = { 1, { 0.14284668862819672, } };
const TfArray<1, int> quant15_zero = { 1, { 52 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const TfArray<2, int> tensor_dimension16 = { 2, { 1,5 } };
const TfArray<1, float> quant16_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant16_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 9 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 9,8,7 } };
const TfArray<1, int> outputs1 = { 1, { 10 } };
const TfLitePoolParams opdata2 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs2 = { 1, { 10 } };
const TfArray<1, int> outputs2 = { 1, { 11 } };
const TfLiteConvParams opdata3 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs3 = { 3, { 11,6,5 } };
const TfArray<1, int> outputs3 = { 1, { 12 } };
const TfLitePoolParams opdata4 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs4 = { 1, { 12 } };
const TfArray<1, int> outputs4 = { 1, { 13 } };
const TfLiteReshapeParams opdata5 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs5 = { 2, { 13,2 } };
const TfArray<1, int> outputs5 = { 1, { 14 } };
const TfLiteFullyConnectedParams opdata6 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs6 = { 3, { 14,4,3 } };
const TfArray<1, int> outputs6 = { 1, { 15 } };
const TfLiteSoftmaxParams opdata7 = { 1 };
const TfArray<1, int> inputs7 = { 1, { 15 } };
const TfArray<1, int> outputs7 = { 1, { 16 } };
};

TensorInfo_t tensorData[] = {
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension0, 3960, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant0))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data1, (TfLiteIntArray*)&g0::tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data2, (TfLiteIntArray*)&g0::tensor_dimension2, 8, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data3, (TfLiteIntArray*)&g0::tensor_dimension3, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant3))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data4, (TfLiteIntArray*)&g0::tensor_dimension4, 20000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant4))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data5, (TfLiteIntArray*)&g0::tensor_dimension5, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant5))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data6, (TfLiteIntArray*)&g0::tensor_dimension6, 1152, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant6))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data7, (TfLiteIntArray*)&g0::tensor_dimension7, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant7))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data8, (TfLiteIntArray*)&g0::tensor_dimension8, 72, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant8))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 31680), (TfLiteIntArray*)&g0::tensor_dimension9, 3960, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant9))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension10, 31680, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant10))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 31680), (TfLiteIntArray*)&g0::tensor_dimension11, 8000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant11))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension12, 16000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant12))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 16000), (TfLiteIntArray*)&g0::tensor_dimension13, 4000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant13))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension14, 4000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant14))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 4000), (TfLiteIntArray*)&g0::tensor_dimension15, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant15))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension16, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant16))}, },
};

#ifndef TF_LITE_STATIC_MEMORY
TfLiteNode tflNodes[8] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
};
#else
TfLiteNode tflNodes[8] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
};
#endif

used_operators_e used_ops[] =
{OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_CONV_2D, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_SOFTMAX, };


// Indices into tflTensors and tflNodes for subgraphs
const size_t tflTensors_subgraph_index[] = {0, 17, };
const size_t tflNodes_subgraph_index[] = {0, 8, };

// Input/output tensors
static const int in_tensor_indices[] = {
  0, 
};

static const int out_tensor_indices[] = {
  16, 
};


size_t current_subgraph_index = 0;

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = false;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}

typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;

static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
 
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  }

  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }

  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }
 
  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }

  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }

  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }

};


} // namespace

TfLiteStatus tflite_learn_4_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  
  // Set microcontext as the context ptr
  ctx.impl_ = static_cast<void*>(&micro_context_);
  // Setup tflitecontext functions
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.ReportError = &MicroContextReportOpError;

  ctx.tensors_size = 17;
  for (size_t i = 0; i < 17; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }

  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }

  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].init) {
        tflNodes[i].user_data = registrations[used_ops[i]].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
      }
    }
  }
  current_subgraph_index = 0;

  for(size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].prepare) {
        ResetTensors();
        TfLiteStatus status = registrations[used_ops[i]].prepare(&ctx, &tflNodes[i]);
        if (status != kTfLiteOk) {
          return status;
        }
      }
    }
  }
  current_subgraph_index = 0;

  return kTfLiteOk;
}

TfLiteStatus tflite_learn_4_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(in_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_4_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(out_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_4_invoke() {
  for (size_t i = 0; i < 8; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[used_ops[i]].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_4_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
